{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md Asif\\\\Desktop\\\\CALENDAR FRONTEND\\\\src\\\\Components\\\\UserModule\\\\Calendar.js\",\n  _s = $RefreshSig$();\n// // MainCalendar.js\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { Calendar, momentLocalizer } from \"react-big-calendar\";\n// import moment from \"moment\";\n// import \"react-big-calendar/lib/css/react-big-calendar.css\";\n// import config from \"../../Common/Configurations/APIConfig\";\n// import LayoutHeader from \"../../Common/Layout/Header\";\n// import LayoutSideBar from \"../../Common/Layout/Sidebar\";\n\n// // Set up moment localizer for react-big-calendar\n// const localizer = momentLocalizer(moment);\n\n// const MainCalendar = () => {\n//   const [communications, setCommunications] = useState([]);\n\n//   const headerconfig = {\n//     headers: {\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n\n//   const apiConfig = {\n//     fetchCalendar: () =>\n//       axios.get(config.APIACTIVATEURL + config.GETCALENDAR, {\n//         ...headerconfig,\n//       }),\n//   };\n\n//   useEffect(() => {\n//     apiConfig\n//       .fetchCalendar()\n//       .then((response) => setCommunications(response.data))\n//       .catch((error) => console.error(\"Error fetching data:\", error));\n//   }, []);\n\n//   // Transform API data into events for react-big-calendar\n//   const events = communications.map((comm) => ({\n//     title: `${comm.companyName} - ${comm.communicationType}`,\n//     start: new Date(comm.scheduledDate),\n//     end: new Date(comm.scheduledDate), // Assuming single-day events\n//   }));\n\n//   return (\n//     <div id=\"layout-wrapper\" style={{ backgroundColor: \"#F08080\" }}>\n//               <LayoutHeader />\n//               <LayoutSideBar />\n//               <div style={{ padding: \"120px 50px 0 50px\" }}>\n//     <div style={{ height: \"80vh\", margin: \"20px\" }}>\n//       <Calendar\n//         localizer={localizer}\n//         events={events}\n//         startAccessor=\"start\"\n//         endAccessor=\"end\"\n//         style={{ height: \"100%\", background: \"white\" }}\n//         views={[\"month\", \"week\", \"day\", \"agenda\"]}\n//         defaultView=\"month\"\n//         popup\n//         selectable\n//       />\n//     </div>\n//     </div>\n//     </div>\n//   );\n// };\n\n// export default MainCalendar;\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport config from \"../../Common/Configurations/APIConfig\";\nimport LayoutHeader from \"../../Common/Layout/Header\";\nimport LayoutSideBar from \"../../Common/Layout/Sidebar\";\n\n// Set up moment localizer for react-big-calendar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst MainCalendar = () => {\n  _s();\n  const [communications, setCommunications] = useState([]);\n  const [currentDate, setCurrentDate] = useState(moment());\n  const headerconfig = {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const apiConfig = {\n    fetchCalendar: () => axios.get(config.APIACTIVATEURL + config.GETCALENDAR, {\n      ...headerconfig\n    })\n  };\n  useEffect(() => {\n    apiConfig.fetchCalendar().then(response => setCommunications(response.data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // Transform API data into events for react-big-calendar\n  const events = communications.map(comm => ({\n    title: `${comm.companyName} - ${comm.communicationType}`,\n    start: new Date(comm.scheduledDate),\n    end: new Date(comm.scheduledDate) // Assuming single-day events\n  }));\n  const handleMonthChange = e => {\n    const newMonth = e.target.value;\n    setCurrentDate(currentDate.month(newMonth));\n  };\n  const handleYearChange = e => {\n    const newYear = e.target.value;\n    setCurrentDate(currentDate.year(newYear));\n  };\n  const months = moment.months();\n  const years = Array.from(new Array(20), (_, index) => currentDate.year() - 10 + index);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"layout-wrapper\",\n    style: {\n      backgroundColor: \"#F08080\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(LayoutHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LayoutSideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"120px 50px 0 50px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"80vh\",\n          margin: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleMonthChange,\n            value: currentDate.month(),\n            children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: month\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleYearChange,\n            value: currentDate.year(),\n            children: years.map((year, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: events,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          style: {\n            height: \"100%\",\n            background: \"white\"\n          },\n          views: [\"month\", \"week\", \"day\", \"agenda\"],\n          defaultView: \"month\",\n          popup: true,\n          selectable: true,\n          date: currentDate.toDate() // Pass currentDate to control the displayed month/year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(MainCalendar, \"GF/5UTyIRaFViQVjrQ5pOdx520s=\");\n_c = MainCalendar;\nexport default MainCalendar;\nvar _c;\n$RefreshReg$(_c, \"MainCalendar\");","map":{"version":3,"names":["React","useEffect","useState","axios","Calendar","momentLocalizer","moment","config","LayoutHeader","LayoutSideBar","jsxDEV","_jsxDEV","localizer","MainCalendar","_s","communications","setCommunications","currentDate","setCurrentDate","headerconfig","headers","Authorization","localStorage","getItem","apiConfig","fetchCalendar","get","APIACTIVATEURL","GETCALENDAR","then","response","data","catch","error","console","events","map","comm","title","companyName","communicationType","start","Date","scheduledDate","end","handleMonthChange","e","newMonth","target","value","month","handleYearChange","newYear","year","months","years","Array","from","_","index","id","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","height","margin","marginBottom","onChange","startAccessor","endAccessor","background","views","defaultView","popup","selectable","date","toDate","_c","$RefreshReg$"],"sources":["C:/Users/Md Asif/Desktop/CALENDAR FRONTEND/src/Components/UserModule/Calendar.js"],"sourcesContent":["// // MainCalendar.js\r\n// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Calendar, momentLocalizer } from \"react-big-calendar\";\r\n// import moment from \"moment\";\r\n// import \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n// import config from \"../../Common/Configurations/APIConfig\";\r\n// import LayoutHeader from \"../../Common/Layout/Header\";\r\n// import LayoutSideBar from \"../../Common/Layout/Sidebar\";\r\n\r\n// // Set up moment localizer for react-big-calendar\r\n// const localizer = momentLocalizer(moment);\r\n\r\n// const MainCalendar = () => {\r\n//   const [communications, setCommunications] = useState([]);\r\n\r\n//   const headerconfig = {\r\n//     headers: {\r\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const apiConfig = {\r\n//     fetchCalendar: () =>\r\n//       axios.get(config.APIACTIVATEURL + config.GETCALENDAR, {\r\n//         ...headerconfig,\r\n//       }),\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     apiConfig\r\n//       .fetchCalendar()\r\n//       .then((response) => setCommunications(response.data))\r\n//       .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   }, []);\r\n\r\n//   // Transform API data into events for react-big-calendar\r\n//   const events = communications.map((comm) => ({\r\n//     title: `${comm.companyName} - ${comm.communicationType}`,\r\n//     start: new Date(comm.scheduledDate),\r\n//     end: new Date(comm.scheduledDate), // Assuming single-day events\r\n//   }));\r\n\r\n//   return (\r\n//     <div id=\"layout-wrapper\" style={{ backgroundColor: \"#F08080\" }}>\r\n//               <LayoutHeader />\r\n//               <LayoutSideBar />\r\n//               <div style={{ padding: \"120px 50px 0 50px\" }}>\r\n//     <div style={{ height: \"80vh\", margin: \"20px\" }}>\r\n//       <Calendar\r\n//         localizer={localizer}\r\n//         events={events}\r\n//         startAccessor=\"start\"\r\n//         endAccessor=\"end\"\r\n//         style={{ height: \"100%\", background: \"white\" }}\r\n//         views={[\"month\", \"week\", \"day\", \"agenda\"]}\r\n//         defaultView=\"month\"\r\n//         popup\r\n//         selectable\r\n//       />\r\n//     </div>\r\n//     </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MainCalendar;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport config from \"../../Common/Configurations/APIConfig\";\r\nimport LayoutHeader from \"../../Common/Layout/Header\";\r\nimport LayoutSideBar from \"../../Common/Layout/Sidebar\";\r\n\r\n// Set up moment localizer for react-big-calendar\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MainCalendar = () => {\r\n  const [communications, setCommunications] = useState([]);\r\n  const [currentDate, setCurrentDate] = useState(moment());\r\n\r\n  const headerconfig = {\r\n    headers: {\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const apiConfig = {\r\n    fetchCalendar: () =>\r\n      axios.get(config.APIACTIVATEURL + config.GETCALENDAR, {\r\n        ...headerconfig,\r\n      }),\r\n  };\r\n\r\n  useEffect(() => {\r\n    apiConfig\r\n      .fetchCalendar()\r\n      .then((response) => setCommunications(response.data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  // Transform API data into events for react-big-calendar\r\n  const events = communications.map((comm) => ({\r\n    title: `${comm.companyName} - ${comm.communicationType}`,\r\n    start: new Date(comm.scheduledDate),\r\n    end: new Date(comm.scheduledDate), // Assuming single-day events\r\n  }));\r\n\r\n  const handleMonthChange = (e) => {\r\n    const newMonth = e.target.value;\r\n    setCurrentDate(currentDate.month(newMonth));\r\n  };\r\n\r\n  const handleYearChange = (e) => {\r\n    const newYear = e.target.value;\r\n    setCurrentDate(currentDate.year(newYear));\r\n  };\r\n\r\n  const months = moment.months();\r\n  const years = Array.from(new Array(20), (_, index) => currentDate.year() - 10 + index);\r\n\r\n  return (\r\n    <div id=\"layout-wrapper\" style={{ backgroundColor: \"#F08080\" }}>\r\n      <LayoutHeader />\r\n      <LayoutSideBar />\r\n      <div style={{ padding: \"120px 50px 0 50px\" }}>\r\n        <div style={{ height: \"80vh\", margin: \"20px\" }}>\r\n          <div style={{ marginBottom: \"10px\" }}>\r\n            <select onChange={handleMonthChange} value={currentDate.month()}>\r\n              {months.map((month, index) => (\r\n                <option key={index} value={index}>\r\n                  {month}\r\n                </option>\r\n              ))}\r\n            </select>\r\n\r\n            <select onChange={handleYearChange} value={currentDate.year()}>\r\n              {years.map((year, index) => (\r\n                <option key={index} value={year}>\r\n                  {year}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <Calendar\r\n            localizer={localizer}\r\n            events={events}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            style={{ height: \"100%\", background: \"white\" }}\r\n            views={[\"month\", \"week\", \"day\", \"agenda\"]}\r\n            defaultView=\"month\"\r\n            popup\r\n            selectable\r\n            date={currentDate.toDate()} // Pass currentDate to control the displayed month/year\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}