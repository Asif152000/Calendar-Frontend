{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md Asif\\\\Desktop\\\\CALENDAR FRONTEND\\\\src\\\\Components\\\\UserModule\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import { Link } from \"react-router-dom\";\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import config from \"../../Common/Configurations/APIConfig\";\n// import { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\n\n// const initialFieldValues = {\n//   companyId: \"00000000-0000-0000-0000-000000000000\",\n//   companyName: \"\",\n//   location: \"\",\n//   linkedInProfile: \"\",\n//   emails: \"\",\n//   phoneNumbers: \"\",\n//   comments: \"\",\n//   communicationPeriodicity: \"\",\n// };\n\n// export default function Dashboard() {\n//   const [lists, setLists] = useState([]);\n//   const [values, setValues] = useState(initialFieldValues);\n//   const [recordForEdit, setRecordForEdit] = useState(null);\n//   const [errors, setErrors] = useState({});\n//   const [btnSubmit, setBtnSubmit] = useState(true);\n//   const [totalPages, setTotalPages] = useState(0);\n//   const [pageSize, setPageSize] = useState(20);\n//   const [pageNumber, setPageNumber] = useState(1);\n//   const [data, setData] = useState([]);\n//   const [totalRecords, setTotalRecords] = useState(0);\n\n//   const headerConfig = {\n//     headers: {\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n\n//   useEffect(() => {\n//     if (recordForEdit !== null) {\n//       setValues(recordForEdit);\n//     }\n//   }, [recordForEdit]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setValues({\n//       ...values,\n//       [name]: value,\n//     });\n//   };\n\n//   const validate = () => {\n//     let temp = {};\n//     temp.companyName = values.companyName !== \"\";\n//     temp.location = values.location !== \"\";\n//     temp.linkedInProfile = values.linkedInProfile !== \"\";\n//     temp.emails = values.emails !== \"\";\n//     temp.phoneNumbers = values.phoneNumbers !== \"\";\n//     temp.comments = values.comments !== \"\";\n//     temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\n//     setErrors(temp);\n//     return Object.values(temp).every((x) => x === true);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (validate()) {\n//       setBtnSubmit(false);\n//       const payload = { ...values };\n//       addOrEdit(payload);\n//     }\n//   };\n//   const handleCommunicationPerformed = () => {\n//     // Logic for marking a communication as performed or any desired action\n//     console.log(\"Communication Performed Button Clicked\");\n//   };\n\n//   const applicationAPI = () => {\n//     return {\n//       create: (newRecord) =>\n//         axios.post(\n//           `${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`,\n//           newRecord,\n//           headerConfig\n//         ),\n//       update: (updateRecord) =>\n//         axios.put(\n//           `${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`,\n//           updateRecord,\n//           headerConfig\n//         ),\n//     };\n//   };\n\n//   const addOrEdit = (payload) => {\n//     if (payload.companyId === initialFieldValues.companyId) {\n//       applicationAPI()\n//         .create(payload)\n//         .then((res) => {\n//           if (res.data.statusCode === 200) {\n//             handleSuccess(\"Record Created\");\n//             resetForm();\n//             getData(pageNumber);\n//           } else {\n//             handleError(res.data.message);\n//           }\n//         })\n//         .catch(() => {\n//           handleError(\"Error in saving data\");\n//         })\n//         .finally(() => setBtnSubmit(true));\n//     } else {\n//       applicationAPI()\n//         .update(payload)\n//         .then((res) => {\n//           if (res.data.statusCode === 200) {\n//             handleSuccess(\"Record Updated\");\n//             resetForm();\n//             getData(pageNumber);\n//           } else {\n//             handleError(res.data.message);\n//           }\n//         })\n//         .catch(() => {\n//           handleError(\"Error in updating data\");\n//         })\n//         .finally(() => setBtnSubmit(true));\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setValues(initialFieldValues);\n//     setErrors({});\n//   };\n\n//   const showEditDetails = (data) => {\n//     setRecordForEdit(data);\n//   };\n\n//   const getData = (number) => {\n//     axios\n//       .get(\n//         `${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`,\n//         headerConfig\n//       )\n//       .then((response) => {\n//         setLists(response.data.data);\n//         setPageNumber(response.data.data.pageNumber);\n//         setPageSize(response.data.data.pageSize);\n//         setTotalPages(response.data.data.totalPages);\n//         setData(response.data.data);\n//         setTotalRecords(response.data.data.totalRecords);\n//       });\n//   };\n\n//   useEffect(() => {\n//     getData(pageNumber);\n//   }, []);\n\n//   const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\n//     const page = index + 1;\n//     return (\n//       <li\n//         className=\"page-item\"\n//         key={page}\n//         onClick={() => getData(page)}\n//       >\n//         <Link className=\"page-link\">{page}</Link>\n//       </li>\n//     );\n//   });\n\n// return (\n//     <div className=\"row\">\n//   <div className=\"col-xl-12\">\n//     <div className=\"card card-height-100\">\n//       <div className=\"card-header align-items-center d-flex\">\n//         <h4 className=\"card-title mb-0 flex-grow-1\">Communications</h4>\n//         {/* Add the button */}\n//         <button \n//           className=\"btn btn-primary ms-auto\" \n//           onClick={() => handleCommunicationPerformed()}\n//         >\n//           Communication Performed\n//         </button>\n//       </div>\n//       <div className=\"card-body\">\n//         <div className=\"table-responsive table-card\">\n//           <table className=\"table align-middle\">\n//             <thead className=\"table-light\">\n//               <tr>\n//                 <th>S.No</th>\n//                 <th>Select</th>\n//                 <th>Company Name</th>\n//                 <th>Last Communication</th>\n//                 <th>Next Communication</th>\n//                 <th>Highlight</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {lists.length > 0 ? (\n//                 lists.map((company, index) => {\n//                   // Extract communications for the company\n//                   const lastCommunications = company.communications.filter(\n//                     (c) => c.status === true\n//                   );\n//                   const nextCommunications = company.communications.find(\n//                     (c) => c.status === false\n//                   );\n\n//                   return (\n//                     <tr key={company.companyId}>\n//                       <td>{index + 1}</td>\n//                       <td>\n//                         <input type=\"checkbox\" />\n//                       </td>\n//                       <td>{company.companyName}</td>\n//                       <td>\n//                         {lastCommunications.length > 0 ? (\n//                           <>\n//                             {lastCommunications.map((communication, idx) => (\n//                               <div key={idx}>\n//                                 {communication.communicationName} -{\" \"}\n//                                 {new Date(\n//                                   communication.scheduledDate\n//                                 ).toLocaleDateString()}\n//                               </div>\n//                             ))}\n//                           </>\n//                         ) : (\n//                           \"No Completed Communications\"\n//                         )}\n//                       </td>\n//                       <td>\n//                         {nextCommunications ? (\n//                           <>\n//                             {nextCommunications.communicationName} -{\" \"}\n//                             {new Date(\n//                               nextCommunications.scheduledDate\n//                             ).toLocaleDateString()}\n//                           </>\n//                         ) : (\n//                           \"No Upcoming Communication\"\n//                         )}\n//                       </td>\n//                       <td>\n//                         <button className=\"btn btn-link text-danger\">\n//                           Disable Highlight\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   );\n//                 })\n//               ) : (\n//                 <tr>\n//                   <td colSpan=\"6\" className=\"text-center\">\n//                     No data available\n//                   </td>\n//                 </tr>\n//               )}\n//             </tbody>\n\n//               </table>\n//             </div>\n//                    <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\n//                      <div className=\"flex-shrink-0\">\n//                        <div className=\"text-muted\">\n//                          Showing{\" \"}\n//                          <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\n//                          <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\n//                          Results\n//                        </div>\n//                      </div>\n//                      {/* <ul className=\"pagination pagination-separated pagination-sm mb-0\">\n//                        <li\n//                          className={\n//                            \"page-item\" + data.previousPage === null\n//                              ? \"disabled\"\n//                              : \"\"\n//                          }\n//                          onClick={() => GetFirstPageData()}\n//                        >\n//                          <Link className=\"page-link\">Previous</Link>\n//                        </li>\n//                        {renderPageNumbers}\n//                        <li\n//                          className={\n//                            \"page-item\" + data.nextPage === null\n//                              ? \"disabled\"\n//                              : \"\"\n//                          }\n//                          onClick={() => GetLastPageData()}\n//                        >\n//                          <Link className=\"page-link\">Next</Link>\n//                        </li>\n//                      </ul> */}\n//                    </div>\n//                  </div>\n//                </div>\n//              </div>\n//            </div>\n\n//  );\n// }\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../Common/Configurations/APIConfig\";\nimport { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFieldValues = {\n  companyId: \"00000000-0000-0000-0000-000000000000\",\n  companyName: \"\",\n  location: \"\",\n  linkedInProfile: \"\",\n  emails: \"\",\n  phoneNumbers: \"\",\n  comments: \"\",\n  communicationPeriodicity: \"\"\n};\nexport default function Dashboard() {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [values, setValues] = useState(initialFieldValues);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [btnSubmit, setBtnSubmit] = useState(true);\n  const [totalPages, setTotalPages] = useState(0);\n  const [pageSize, setPageSize] = useState(20);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [isHighlightDisabled, setIsHighlightDisabled] = useState(false);\n  const headerConfig = {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues(recordForEdit);\n    }\n  }, [recordForEdit]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const validate = () => {\n    let temp = {};\n    temp.companyName = values.companyName !== \"\";\n    temp.location = values.location !== \"\";\n    temp.linkedInProfile = values.linkedInProfile !== \"\";\n    temp.emails = values.emails !== \"\";\n    temp.phoneNumbers = values.phoneNumbers !== \"\";\n    temp.comments = values.comments !== \"\";\n    temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\n    setErrors(temp);\n    return Object.values(temp).every(x => x === true);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      setBtnSubmit(false);\n      const payload = {\n        ...values\n      };\n      addOrEdit(payload);\n    }\n  };\n  const handleCommunicationPerformed = () => {\n    // Logic for marking a communication as performed or any desired action\n    console.log(\"Communication Performed Button Clicked\");\n  };\n  const isToday = date => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n  const isPast = date => date < new Date();\n  const applicationAPI = () => {\n    return {\n      create: newRecord => axios.post(`${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`, newRecord, headerConfig),\n      update: updateRecord => axios.put(`${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`, updateRecord, headerConfig)\n    };\n  };\n  const addOrEdit = payload => {\n    if (payload.companyId === initialFieldValues.companyId) {\n      applicationAPI().create(payload).then(res => {\n        if (res.data.statusCode === 200) {\n          handleSuccess(\"Record Created\");\n          resetForm();\n          getData(pageNumber);\n        } else {\n          handleError(res.data.message);\n        }\n      }).catch(() => {\n        handleError(\"Error in saving data\");\n      }).finally(() => setBtnSubmit(true));\n    } else {\n      applicationAPI().update(payload).then(res => {\n        if (res.data.statusCode === 200) {\n          handleSuccess(\"Record Updated\");\n          resetForm();\n          getData(pageNumber);\n        } else {\n          handleError(res.data.message);\n        }\n      }).catch(() => {\n        handleError(\"Error in updating data\");\n      }).finally(() => setBtnSubmit(true));\n    }\n  };\n  const resetForm = () => {\n    setValues(initialFieldValues);\n    setErrors({});\n  };\n  const showEditDetails = data => {\n    setRecordForEdit(data);\n  };\n  const getData = number => {\n    axios.get(`${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`, headerConfig).then(response => {\n      setLists(response.data.data);\n      setPageNumber(response.data.data.pageNumber);\n      setPageSize(response.data.data.pageSize);\n      setTotalPages(response.data.data.totalPages);\n      setData(response.data.data);\n      setTotalRecords(response.data.data.totalRecords);\n    });\n  };\n  useEffect(() => {\n    getData(pageNumber);\n  }, []);\n  const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\n    const page = index + 1;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"page-item\",\n      onClick: () => getData(page),\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"page-link\",\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this)\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-height-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header align-items-center d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title mb-0 flex-grow-1\",\n            children: \"Communications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary ms-auto\",\n            onClick: () => handleCommunicationPerformed(),\n            children: \"Communication Performed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive table-card\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table align-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"table-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"S.No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Last Communication\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Next Communication\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Highlight\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: lists.length > 0 ? lists.map((company, index) => {\n                  // Extract communications for the company\n                  const lastCommunications = company.communications.filter(c => c.status === true);\n                  const nextCommunications = company.communications.find(c => c.status === false);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: company.companyName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: lastCommunications.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: lastCommunications.map((communication, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [communication.communicationName, \" -\", \" \", new Date(communication.scheduledDate).toLocaleDateString()]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false) : \"No Completed Communications\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 535,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: nextCommunications ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: isHighlightDisabled ? \"inherit\" : isToday(new Date(nextCommunications.scheduledDate)) ? \"yellow\" : isPast(new Date(nextCommunications.scheduledDate)) ? \"red\" : \"inherit\",\n                            fontWeight: \"bold\" // Make the text bold\n                          },\n                          children: nextCommunications.communicationName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 7\n                        }, this), \" \", \"-\", \" \", new Date(nextCommunications.scheduledDate).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 570,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => setIsHighlightDisabled(prev => !prev),\n                          style: {\n                            marginTop: \"5px\",\n                            backgroundColor: \"transparent\",\n                            border: \"none\",\n                            color: \"blue\",\n                            cursor: \"pointer\",\n                            textDecoration: \"underline\"\n                          },\n                          children: \"Disable Highlight\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 571,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true) : \"No Upcoming Communication\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-link text-danger\",\n                        children: \"Disable Highlight\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 592,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 53\n                    }, this)]\n                  }, company.companyId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 601,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items-center mt-4 pt-2 justify-content-between d-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: [\"Showing\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fw-semibold\",\n                  children: lists.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 37\n                }, this), \" of\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fw-semibold\",\n                  children: totalRecords\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 37\n                }, this), \" \", \"Results\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"fQMLZwCfrw+b4Stl/4rktr3aKRI=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Link","useState","useEffect","axios","config","handleSuccess","handleError","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFieldValues","companyId","companyName","location","linkedInProfile","emails","phoneNumbers","comments","communicationPeriodicity","Dashboard","_s","lists","setLists","values","setValues","recordForEdit","setRecordForEdit","errors","setErrors","btnSubmit","setBtnSubmit","totalPages","setTotalPages","pageSize","setPageSize","pageNumber","setPageNumber","data","setData","totalRecords","setTotalRecords","isHighlightDisabled","setIsHighlightDisabled","headerConfig","headers","Authorization","localStorage","getItem","handleInputChange","e","name","value","target","validate","temp","Object","every","x","handleSubmit","preventDefault","payload","addOrEdit","handleCommunicationPerformed","console","log","isToday","date","today","Date","getDate","getMonth","getFullYear","isPast","applicationAPI","create","newRecord","post","APIACTIVATEURL","CREATECOMPANYMANAGEMENT","update","updateRecord","put","UPDATECOMPANYMANAGEMENT","then","res","statusCode","resetForm","getData","message","catch","finally","showEditDetails","number","get","GETCOMMUNICATION","response","renderPageNumbers","Array","map","_","index","page","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","length","company","lastCommunications","communications","filter","c","status","nextCommunications","find","type","communication","idx","communicationName","scheduledDate","toLocaleDateString","style","color","fontWeight","prev","marginTop","backgroundColor","border","cursor","textDecoration","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Md Asif/Desktop/CALENDAR FRONTEND/src/Components/UserModule/Dashboard.js"],"sourcesContent":["// import { Link } from \"react-router-dom\";\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import config from \"../../Common/Configurations/APIConfig\";\r\n// import { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\r\n\r\n// const initialFieldValues = {\r\n//   companyId: \"00000000-0000-0000-0000-000000000000\",\r\n//   companyName: \"\",\r\n//   location: \"\",\r\n//   linkedInProfile: \"\",\r\n//   emails: \"\",\r\n//   phoneNumbers: \"\",\r\n//   comments: \"\",\r\n//   communicationPeriodicity: \"\",\r\n// };\r\n\r\n// export default function Dashboard() {\r\n//   const [lists, setLists] = useState([]);\r\n//   const [values, setValues] = useState(initialFieldValues);\r\n//   const [recordForEdit, setRecordForEdit] = useState(null);\r\n//   const [errors, setErrors] = useState({});\r\n//   const [btnSubmit, setBtnSubmit] = useState(true);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const [pageSize, setPageSize] = useState(20);\r\n//   const [pageNumber, setPageNumber] = useState(1);\r\n//   const [data, setData] = useState([]);\r\n//   const [totalRecords, setTotalRecords] = useState(0);\r\n\r\n//   const headerConfig = {\r\n//     headers: {\r\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (recordForEdit !== null) {\r\n//       setValues(recordForEdit);\r\n//     }\r\n//   }, [recordForEdit]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setValues({\r\n//       ...values,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const validate = () => {\r\n//     let temp = {};\r\n//     temp.companyName = values.companyName !== \"\";\r\n//     temp.location = values.location !== \"\";\r\n//     temp.linkedInProfile = values.linkedInProfile !== \"\";\r\n//     temp.emails = values.emails !== \"\";\r\n//     temp.phoneNumbers = values.phoneNumbers !== \"\";\r\n//     temp.comments = values.comments !== \"\";\r\n//     temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\r\n//     setErrors(temp);\r\n//     return Object.values(temp).every((x) => x === true);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (validate()) {\r\n//       setBtnSubmit(false);\r\n//       const payload = { ...values };\r\n//       addOrEdit(payload);\r\n//     }\r\n//   };\r\n//   const handleCommunicationPerformed = () => {\r\n//     // Logic for marking a communication as performed or any desired action\r\n//     console.log(\"Communication Performed Button Clicked\");\r\n//   };\r\n\r\n//   const applicationAPI = () => {\r\n//     return {\r\n//       create: (newRecord) =>\r\n//         axios.post(\r\n//           `${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`,\r\n//           newRecord,\r\n//           headerConfig\r\n//         ),\r\n//       update: (updateRecord) =>\r\n//         axios.put(\r\n//           `${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`,\r\n//           updateRecord,\r\n//           headerConfig\r\n//         ),\r\n//     };\r\n//   };\r\n\r\n//   const addOrEdit = (payload) => {\r\n//     if (payload.companyId === initialFieldValues.companyId) {\r\n//       applicationAPI()\r\n//         .create(payload)\r\n//         .then((res) => {\r\n//           if (res.data.statusCode === 200) {\r\n//             handleSuccess(\"Record Created\");\r\n//             resetForm();\r\n//             getData(pageNumber);\r\n//           } else {\r\n//             handleError(res.data.message);\r\n//           }\r\n//         })\r\n//         .catch(() => {\r\n//           handleError(\"Error in saving data\");\r\n//         })\r\n//         .finally(() => setBtnSubmit(true));\r\n//     } else {\r\n//       applicationAPI()\r\n//         .update(payload)\r\n//         .then((res) => {\r\n//           if (res.data.statusCode === 200) {\r\n//             handleSuccess(\"Record Updated\");\r\n//             resetForm();\r\n//             getData(pageNumber);\r\n//           } else {\r\n//             handleError(res.data.message);\r\n//           }\r\n//         })\r\n//         .catch(() => {\r\n//           handleError(\"Error in updating data\");\r\n//         })\r\n//         .finally(() => setBtnSubmit(true));\r\n//     }\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setValues(initialFieldValues);\r\n//     setErrors({});\r\n//   };\r\n\r\n//   const showEditDetails = (data) => {\r\n//     setRecordForEdit(data);\r\n//   };\r\n\r\n//   const getData = (number) => {\r\n//     axios\r\n//       .get(\r\n//         `${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`,\r\n//         headerConfig\r\n//       )\r\n//       .then((response) => {\r\n//         setLists(response.data.data);\r\n//         setPageNumber(response.data.data.pageNumber);\r\n//         setPageSize(response.data.data.pageSize);\r\n//         setTotalPages(response.data.data.totalPages);\r\n//         setData(response.data.data);\r\n//         setTotalRecords(response.data.data.totalRecords);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getData(pageNumber);\r\n//   }, []);\r\n\r\n//   const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\r\n//     const page = index + 1;\r\n//     return (\r\n//       <li\r\n//         className=\"page-item\"\r\n//         key={page}\r\n//         onClick={() => getData(page)}\r\n//       >\r\n//         <Link className=\"page-link\">{page}</Link>\r\n//       </li>\r\n//     );\r\n//   });\r\n\r\n// return (\r\n//     <div className=\"row\">\r\n//   <div className=\"col-xl-12\">\r\n//     <div className=\"card card-height-100\">\r\n//       <div className=\"card-header align-items-center d-flex\">\r\n//         <h4 className=\"card-title mb-0 flex-grow-1\">Communications</h4>\r\n//         {/* Add the button */}\r\n//         <button \r\n//           className=\"btn btn-primary ms-auto\" \r\n//           onClick={() => handleCommunicationPerformed()}\r\n//         >\r\n//           Communication Performed\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"card-body\">\r\n//         <div className=\"table-responsive table-card\">\r\n//           <table className=\"table align-middle\">\r\n//             <thead className=\"table-light\">\r\n//               <tr>\r\n//                 <th>S.No</th>\r\n//                 <th>Select</th>\r\n//                 <th>Company Name</th>\r\n//                 <th>Last Communication</th>\r\n//                 <th>Next Communication</th>\r\n//                 <th>Highlight</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {lists.length > 0 ? (\r\n//                 lists.map((company, index) => {\r\n//                   // Extract communications for the company\r\n//                   const lastCommunications = company.communications.filter(\r\n//                     (c) => c.status === true\r\n//                   );\r\n//                   const nextCommunications = company.communications.find(\r\n//                     (c) => c.status === false\r\n//                   );\r\n\r\n//                   return (\r\n//                     <tr key={company.companyId}>\r\n//                       <td>{index + 1}</td>\r\n//                       <td>\r\n//                         <input type=\"checkbox\" />\r\n//                       </td>\r\n//                       <td>{company.companyName}</td>\r\n//                       <td>\r\n//                         {lastCommunications.length > 0 ? (\r\n//                           <>\r\n//                             {lastCommunications.map((communication, idx) => (\r\n//                               <div key={idx}>\r\n//                                 {communication.communicationName} -{\" \"}\r\n//                                 {new Date(\r\n//                                   communication.scheduledDate\r\n//                                 ).toLocaleDateString()}\r\n//                               </div>\r\n//                             ))}\r\n//                           </>\r\n//                         ) : (\r\n//                           \"No Completed Communications\"\r\n//                         )}\r\n//                       </td>\r\n//                       <td>\r\n//                         {nextCommunications ? (\r\n//                           <>\r\n//                             {nextCommunications.communicationName} -{\" \"}\r\n//                             {new Date(\r\n//                               nextCommunications.scheduledDate\r\n//                             ).toLocaleDateString()}\r\n//                           </>\r\n//                         ) : (\r\n//                           \"No Upcoming Communication\"\r\n//                         )}\r\n//                       </td>\r\n//                       <td>\r\n//                         <button className=\"btn btn-link text-danger\">\r\n//                           Disable Highlight\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   );\r\n//                 })\r\n//               ) : (\r\n//                 <tr>\r\n//                   <td colSpan=\"6\" className=\"text-center\">\r\n//                     No data available\r\n//                   </td>\r\n//                 </tr>\r\n//               )}\r\n//             </tbody>\r\n\r\n\r\n\r\n//               </table>\r\n//             </div>\r\n//                    <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\r\n//                      <div className=\"flex-shrink-0\">\r\n//                        <div className=\"text-muted\">\r\n//                          Showing{\" \"}\r\n//                          <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\r\n//                          <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\r\n//                          Results\r\n//                        </div>\r\n//                      </div>\r\n//                      {/* <ul className=\"pagination pagination-separated pagination-sm mb-0\">\r\n//                        <li\r\n//                          className={\r\n//                            \"page-item\" + data.previousPage === null\r\n//                              ? \"disabled\"\r\n//                              : \"\"\r\n//                          }\r\n//                          onClick={() => GetFirstPageData()}\r\n//                        >\r\n//                          <Link className=\"page-link\">Previous</Link>\r\n//                        </li>\r\n//                        {renderPageNumbers}\r\n//                        <li\r\n//                          className={\r\n//                            \"page-item\" + data.nextPage === null\r\n//                              ? \"disabled\"\r\n//                              : \"\"\r\n//                          }\r\n//                          onClick={() => GetLastPageData()}\r\n//                        >\r\n//                          <Link className=\"page-link\">Next</Link>\r\n//                        </li>\r\n//                      </ul> */}\r\n//                    </div>\r\n//                  </div>\r\n//                </div>\r\n//              </div>\r\n//            </div>\r\n\r\n\r\n//  );\r\n// }\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../Common/Configurations/APIConfig\";\r\nimport { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\r\n\r\nconst initialFieldValues = {\r\n    companyId: \"00000000-0000-0000-0000-000000000000\",\r\n    companyName: \"\",\r\n    location: \"\",\r\n    linkedInProfile: \"\",\r\n    emails: \"\",\r\n    phoneNumbers: \"\",\r\n    comments: \"\",\r\n    communicationPeriodicity: \"\",\r\n};\r\n\r\nexport default function Dashboard() {\r\n    const [lists, setLists] = useState([]);\r\n    const [values, setValues] = useState(initialFieldValues);\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [btnSubmit, setBtnSubmit] = useState(true);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [isHighlightDisabled, setIsHighlightDisabled] = useState(false);\r\n\r\n\r\n    const headerConfig = {\r\n        headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit !== null) {\r\n            setValues(recordForEdit);\r\n        }\r\n    }, [recordForEdit]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const validate = () => {\r\n        let temp = {};\r\n        temp.companyName = values.companyName !== \"\";\r\n        temp.location = values.location !== \"\";\r\n        temp.linkedInProfile = values.linkedInProfile !== \"\";\r\n        temp.emails = values.emails !== \"\";\r\n        temp.phoneNumbers = values.phoneNumbers !== \"\";\r\n        temp.comments = values.comments !== \"\";\r\n        temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\r\n        setErrors(temp);\r\n        return Object.values(temp).every((x) => x === true);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setBtnSubmit(false);\r\n            const payload = { ...values };\r\n            addOrEdit(payload);\r\n        }\r\n    };\r\n    const handleCommunicationPerformed = () => {\r\n        // Logic for marking a communication as performed or any desired action\r\n        console.log(\"Communication Performed Button Clicked\");\r\n    };\r\n    const isToday = (date) => {\r\n        const today = new Date();\r\n        return (\r\n            date.getDate() === today.getDate() &&\r\n            date.getMonth() === today.getMonth() &&\r\n            date.getFullYear() === today.getFullYear()\r\n        );\r\n    };\r\n    const isPast = (date) => date < new Date();\r\n\r\n    const applicationAPI = () => {\r\n        return {\r\n            create: (newRecord) =>\r\n                axios.post(\r\n                    `${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`,\r\n                    newRecord,\r\n                    headerConfig\r\n                ),\r\n            update: (updateRecord) =>\r\n                axios.put(\r\n                    `${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`,\r\n                    updateRecord,\r\n                    headerConfig\r\n                ),\r\n        };\r\n    };\r\n\r\n    const addOrEdit = (payload) => {\r\n        if (payload.companyId === initialFieldValues.companyId) {\r\n            applicationAPI()\r\n                .create(payload)\r\n                .then((res) => {\r\n                    if (res.data.statusCode === 200) {\r\n                        handleSuccess(\"Record Created\");\r\n                        resetForm();\r\n                        getData(pageNumber);\r\n                    } else {\r\n                        handleError(res.data.message);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    handleError(\"Error in saving data\");\r\n                })\r\n                .finally(() => setBtnSubmit(true));\r\n        } else {\r\n            applicationAPI()\r\n                .update(payload)\r\n                .then((res) => {\r\n                    if (res.data.statusCode === 200) {\r\n                        handleSuccess(\"Record Updated\");\r\n                        resetForm();\r\n                        getData(pageNumber);\r\n                    } else {\r\n                        handleError(res.data.message);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    handleError(\"Error in updating data\");\r\n                })\r\n                .finally(() => setBtnSubmit(true));\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFieldValues);\r\n        setErrors({});\r\n    };\r\n\r\n    const showEditDetails = (data) => {\r\n        setRecordForEdit(data);\r\n    };\r\n\r\n    const getData = (number) => {\r\n        axios\r\n            .get(\r\n                `${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`,\r\n                headerConfig\r\n            )\r\n            .then((response) => {\r\n                setLists(response.data.data);\r\n                setPageNumber(response.data.data.pageNumber);\r\n                setPageSize(response.data.data.pageSize);\r\n                setTotalPages(response.data.data.totalPages);\r\n                setData(response.data.data);\r\n                setTotalRecords(response.data.data.totalRecords);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(pageNumber);\r\n    }, []);\r\n\r\n    const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\r\n        const page = index + 1;\r\n        return (\r\n            <li\r\n                className=\"page-item\"\r\n                key={page}\r\n                onClick={() => getData(page)}\r\n            >\r\n                <Link className=\"page-link\">{page}</Link>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n                <div className=\"card card-height-100\">\r\n                    <div className=\"card-header align-items-center d-flex\">\r\n                        <h4 className=\"card-title mb-0 flex-grow-1\">Communications</h4>\r\n                        {/* Add the button */}\r\n                        <button\r\n                            className=\"btn btn-primary ms-auto\"\r\n                            onClick={() => handleCommunicationPerformed()}\r\n                        >\r\n                            Communication Performed\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"table-responsive table-card\">\r\n                            <table className=\"table align-middle\">\r\n                                <thead className=\"table-light\">\r\n                                    <tr>\r\n                                        <th>S.No</th>\r\n                                        <th>Select</th>\r\n                                        <th>Company Name</th>\r\n                                        <th>Last Communication</th>\r\n                                        <th>Next Communication</th>\r\n                                        <th>Highlight</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {lists.length > 0 ? (\r\n                                        lists.map((company, index) => {\r\n                                            // Extract communications for the company\r\n                                            const lastCommunications = company.communications.filter(\r\n                                                (c) => c.status === true\r\n                                            );\r\n                                            const nextCommunications = company.communications.find(\r\n                                                (c) => c.status === false\r\n                                            );\r\n\r\n                                            return (\r\n                                                <tr key={company.companyId}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                        <input type=\"checkbox\" />\r\n                                                    </td>\r\n                                                    <td>{company.companyName}</td>\r\n                                                    <td>\r\n                                                        {lastCommunications.length > 0 ? (\r\n                                                            <>\r\n                                                                {lastCommunications.map((communication, idx) => (\r\n                                                                    <div key={idx}>\r\n                                                                        {communication.communicationName} -{\" \"}\r\n                                                                        {new Date(\r\n                                                                            communication.scheduledDate\r\n                                                                        ).toLocaleDateString()}\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            \"No Completed Communications\"\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td>\r\n  {nextCommunications ? (\r\n    <>\r\n      <span\r\n        style={{\r\n          color: isHighlightDisabled\r\n            ? \"inherit\"\r\n            : isToday(new Date(nextCommunications.scheduledDate))\r\n            ? \"yellow\"\r\n            : isPast(new Date(nextCommunications.scheduledDate))\r\n            ? \"red\"\r\n            : \"inherit\",\r\n          fontWeight: \"bold\", // Make the text bold\r\n        }}\r\n      >\r\n        {nextCommunications.communicationName}\r\n      </span>{\" \"}\r\n      -{\" \"}\r\n      {new Date(nextCommunications.scheduledDate).toLocaleDateString()}\r\n      <br />\r\n      <button\r\n        onClick={() => setIsHighlightDisabled((prev) => !prev)}\r\n        style={{\r\n          marginTop: \"5px\",\r\n          backgroundColor: \"transparent\",\r\n          border: \"none\",\r\n          color: \"blue\",\r\n          cursor: \"pointer\",\r\n          textDecoration: \"underline\",\r\n        }}\r\n      >\r\n        Disable Highlight\r\n      </button>\r\n    </>\r\n  ) : (\r\n    \"No Upcoming Communication\"\r\n  )}\r\n</td>\r\n\r\n\r\n                                                    <td>\r\n                                                        <button className=\"btn btn-link text-danger\">\r\n                                                            Disable Highlight\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"6\" className=\"text-center\">\r\n                                                No data available\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n\r\n\r\n\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                <div className=\"text-muted\">\r\n                                    Showing{\" \"}\r\n                                    <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\r\n                                    <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\r\n                                    Results\r\n                                </div>\r\n                            </div>\r\n                            {/* <ul className=\"pagination pagination-separated pagination-sm mb-0\">\r\n                       <li\r\n                         className={\r\n                           \"page-item\" + data.previousPage === null\r\n                             ? \"disabled\"\r\n                             : \"\"\r\n                         }\r\n                         onClick={() => GetFirstPageData()}\r\n                       >\r\n                         <Link className=\"page-link\">Previous</Link>\r\n                       </li>\r\n                       {renderPageNumbers}\r\n                       <li\r\n                         className={\r\n                           \"page-item\" + data.nextPage === null\r\n                             ? \"disabled\"\r\n                             : \"\"\r\n                         }\r\n                         onClick={() => GetLastPageData()}\r\n                       >\r\n                         <Link className=\"page-link\">Next</Link>\r\n                       </li>\r\n                     </ul> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}