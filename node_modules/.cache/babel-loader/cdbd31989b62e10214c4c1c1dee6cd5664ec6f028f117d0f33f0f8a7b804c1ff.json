{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md Asif\\\\Desktop\\\\CALENDAR FRONTEND\\\\src\\\\Components\\\\UserModule\\\\Calendar.js\";\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import { format } from \"date-fns\";\n// import config from \"../../Common/Configurations/APIConfig\";\n\n// const Calendar = () => {\n//   const [communications, setCommunications] = useState([]);\n//   const [currentMonth, setCurrentMonth] = useState(new Date());\n\n//   const headerconfig = {\n//     headers: {\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n\n//   const apiConfig = {\n//     fetchCalendar: () =>\n//       axios.get(config.APIACTIVATEURL + config.GETCALENDAR, {\n//         ...headerconfig,\n//       }),\n//   };\n\n//   useEffect(() => {\n//     apiConfig\n//       .fetchCalendar()\n//       .then((response) => setCommunications(response.data))\n//       .catch((error) => console.error(\"Error fetching data:\", error));\n//   }, []);\n\n//   const getDaysInMonth = (date) => {\n//     const year = date.getFullYear();\n//     const month = date.getMonth();\n//     return new Date(year, month + 1, 0).getDate();\n//   };\n\n//   const renderCalendarDays = () => {\n//     const daysInMonth = getDaysInMonth(currentMonth);\n//     const firstDayOfMonth = new Date(\n//       currentMonth.getFullYear(),\n//       currentMonth.getMonth(),\n//       1\n//     ).getDay();\n\n//     const days = [];\n//     for (let i = 0; i < firstDayOfMonth; i++) {\n//       days.push(<div key={`empty-${i}`} className=\"calendar-day empty\"></div>);\n//     }\n\n//     for (let i = 1; i <= daysInMonth; i++) {\n//       const currentDate = new Date(\n//         currentMonth.getFullYear(),\n//         currentMonth.getMonth(),\n//         i\n//       );\n//       const formattedDate = format(currentDate, \"yyyy-MM-dd\");\n\n//       const dailyEvents = communications.filter((comm) =>\n//         comm.scheduledDate.startsWith(formattedDate)\n//       );\n\n//       days.push(\n//         <div key={i} className=\"calendar-day\">\n//           <div className=\"date\">{i}</div>\n//           <div className=\"events\">\n//             {dailyEvents.map((event, index) => (\n//               <div key={index} className=\"event\">\n//                 <strong>{event.companyName}</strong> - {event.communicationType}\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n//       );\n//     }\n\n//     return days;\n//   };\n\n//   const handlePrevMonth = () => {\n//     const newDate = new Date(\n//       currentMonth.getFullYear(),\n//       currentMonth.getMonth() - 1,\n//       1\n//     );\n//     setCurrentMonth(newDate);\n//   };\n\n//   const handleNextMonth = () => {\n//     const newDate = new Date(\n//       currentMonth.getFullYear(),\n//       currentMonth.getMonth() + 1,\n//       1\n//     );\n//     setCurrentMonth(newDate);\n//   };\n\n//   return (\n//     <div className=\"calendar-container\">\n//       <div className=\"calendar-header\">\n//         <button className=\"nav-button\" onClick={handlePrevMonth}>\n//           {\"<\"}\n//         </button>\n//         <h2>{format(currentMonth, \"MMMM yyyy\")}</h2>\n//         <button className=\"nav-button\" onClick={handleNextMonth}>\n//           {\">\"}\n//         </button>\n//       </div>\n//       <div className=\"calendar-grid\">{renderCalendarDays()}</div>\n//     </div>\n//   );\n// };\n\n// export default Calendar;\n\n// <style>\n// {`\n// .calendar-container {\n//   font-family: Arial, sans-serif;\n//   max-width: 1000px; /* Define a fixed width */\n//   margin: 20px auto;\n//   padding: 20px;\n//   border: 1px solid #ddd;\n//   border-radius: 10px;\n//   background: #ffffff;\n//   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n// }\n\n// .calendar-header {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   margin-bottom: 20px;\n//   padding: 10px;\n// }\n\n// .calendar-header h2 {\n//   font-size: 24px;\n//   font-weight: bold;\n//   color: #333;\n// }\n\n// .nav-button {\n//   font-size: 20px;\n//   background: #007bff;\n//   color: white;\n//   border: none;\n//   padding: 10px 15px;\n//   border-radius: 5px;\n//   cursor: pointer;\n// }\n\n// .nav-button:hover {\n//   background: #0056b3;\n// }\n\n// .calendar-grid {\n//   display: grid;\n//   grid-template-columns: repeat(7, 1fr);\n//   gap: 15px;\n//   background-color: #f7f7f7;\n//   padding: 15px;\n//   border-radius: 8px;\n// }\n\n// .calendar-day {\n//   background: #fff;\n//   border: 1px solid #ddd;\n//   border-radius: 8px;\n//   padding: 10px;\n//   min-height: 100px; /* Set a consistent height */\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n//   position: relative;\n// }\n\n// .calendar-day.empty {\n//   background: transparent;\n//   border: none;\n// }\n\n// .date {\n//   font-size: 16px;\n//   font-weight: bold;\n//   color: #444;\n//   text-align: right;\n// }\n\n// .events {\n//   margin-top: 10px;\n//   overflow-y: auto; /* Allow scrolling if too many events */\n//   max-height: 80px;\n// }\n\n// .event {\n//   background: #d9eaff;\n//   color: #0056b3;\n//   font-size: 12px;\n//   margin: 3px 0;\n//   padding: 5px;\n//   border-radius: 5px;\n//   text-align: left;\n// }\n\n// .event:hover {\n//   background: #c5dcf6;\n// }\n\n// @media (max-width: 768px) {\n//   .calendar-grid {\n//     grid-template-columns: repeat(3, 1fr); /* Adjust columns for smaller screens */\n//   }\n// }\n\n// @media (max-width: 480px) {\n//   .calendar-grid {\n//     grid-template-columns: repeat(2, 1fr); /* Adjust columns for mobile screens */\n//   }\n\n//   .calendar-day {\n//     min-height: 80px; /* Smaller height for mobile */\n//   }\n\n//   .events {\n//     max-height: 50px; /* Adjust event container for mobile */\n//   }\n// }\n\n// `}\n// </style>\n\nimport React from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst CalendarComponent = ({\n  communications\n}) => {\n  const events = communications.map(comm => ({\n    title: `${comm.companyName} - ${comm.communicationType}`,\n    start: new Date(comm.scheduledDate),\n    end: new Date(comm.scheduledDate) // Assuming single-day events\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"600px\",\n      margin: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","CalendarComponent","communications","events","map","comm","title","companyName","communicationType","start","Date","scheduledDate","end","style","height","margin","children","startAccessor","endAccessor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Md Asif/Desktop/CALENDAR FRONTEND/src/Components/UserModule/Calendar.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { format } from \"date-fns\";\r\n// import config from \"../../Common/Configurations/APIConfig\";\r\n\r\n// const Calendar = () => {\r\n//   const [communications, setCommunications] = useState([]);\r\n//   const [currentMonth, setCurrentMonth] = useState(new Date());\r\n\r\n//   const headerconfig = {\r\n//     headers: {\r\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const apiConfig = {\r\n//     fetchCalendar: () =>\r\n//       axios.get(config.APIACTIVATEURL + config.GETCALENDAR, {\r\n//         ...headerconfig,\r\n//       }),\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     apiConfig\r\n//       .fetchCalendar()\r\n//       .then((response) => setCommunications(response.data))\r\n//       .catch((error) => console.error(\"Error fetching data:\", error));\r\n//   }, []);\r\n\r\n//   const getDaysInMonth = (date) => {\r\n//     const year = date.getFullYear();\r\n//     const month = date.getMonth();\r\n//     return new Date(year, month + 1, 0).getDate();\r\n//   };\r\n\r\n//   const renderCalendarDays = () => {\r\n//     const daysInMonth = getDaysInMonth(currentMonth);\r\n//     const firstDayOfMonth = new Date(\r\n//       currentMonth.getFullYear(),\r\n//       currentMonth.getMonth(),\r\n//       1\r\n//     ).getDay();\r\n\r\n//     const days = [];\r\n//     for (let i = 0; i < firstDayOfMonth; i++) {\r\n//       days.push(<div key={`empty-${i}`} className=\"calendar-day empty\"></div>);\r\n//     }\r\n\r\n//     for (let i = 1; i <= daysInMonth; i++) {\r\n//       const currentDate = new Date(\r\n//         currentMonth.getFullYear(),\r\n//         currentMonth.getMonth(),\r\n//         i\r\n//       );\r\n//       const formattedDate = format(currentDate, \"yyyy-MM-dd\");\r\n\r\n//       const dailyEvents = communications.filter((comm) =>\r\n//         comm.scheduledDate.startsWith(formattedDate)\r\n//       );\r\n\r\n//       days.push(\r\n//         <div key={i} className=\"calendar-day\">\r\n//           <div className=\"date\">{i}</div>\r\n//           <div className=\"events\">\r\n//             {dailyEvents.map((event, index) => (\r\n//               <div key={index} className=\"event\">\r\n//                 <strong>{event.companyName}</strong> - {event.communicationType}\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       );\r\n//     }\r\n\r\n//     return days;\r\n//   };\r\n\r\n//   const handlePrevMonth = () => {\r\n//     const newDate = new Date(\r\n//       currentMonth.getFullYear(),\r\n//       currentMonth.getMonth() - 1,\r\n//       1\r\n//     );\r\n//     setCurrentMonth(newDate);\r\n//   };\r\n\r\n//   const handleNextMonth = () => {\r\n//     const newDate = new Date(\r\n//       currentMonth.getFullYear(),\r\n//       currentMonth.getMonth() + 1,\r\n//       1\r\n//     );\r\n//     setCurrentMonth(newDate);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"calendar-container\">\r\n//       <div className=\"calendar-header\">\r\n//         <button className=\"nav-button\" onClick={handlePrevMonth}>\r\n//           {\"<\"}\r\n//         </button>\r\n//         <h2>{format(currentMonth, \"MMMM yyyy\")}</h2>\r\n//         <button className=\"nav-button\" onClick={handleNextMonth}>\r\n//           {\">\"}\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"calendar-grid\">{renderCalendarDays()}</div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Calendar;\r\n\r\n\r\n\r\n\r\n// <style>\r\n// {`\r\n// .calendar-container {\r\n//   font-family: Arial, sans-serif;\r\n//   max-width: 1000px; /* Define a fixed width */\r\n//   margin: 20px auto;\r\n//   padding: 20px;\r\n//   border: 1px solid #ddd;\r\n//   border-radius: 10px;\r\n//   background: #ffffff;\r\n//   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n// }\r\n\r\n// .calendar-header {\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   align-items: center;\r\n//   margin-bottom: 20px;\r\n//   padding: 10px;\r\n// }\r\n\r\n// .calendar-header h2 {\r\n//   font-size: 24px;\r\n//   font-weight: bold;\r\n//   color: #333;\r\n// }\r\n\r\n// .nav-button {\r\n//   font-size: 20px;\r\n//   background: #007bff;\r\n//   color: white;\r\n//   border: none;\r\n//   padding: 10px 15px;\r\n//   border-radius: 5px;\r\n//   cursor: pointer;\r\n// }\r\n\r\n// .nav-button:hover {\r\n//   background: #0056b3;\r\n// }\r\n\r\n// .calendar-grid {\r\n//   display: grid;\r\n//   grid-template-columns: repeat(7, 1fr);\r\n//   gap: 15px;\r\n//   background-color: #f7f7f7;\r\n//   padding: 15px;\r\n//   border-radius: 8px;\r\n// }\r\n\r\n// .calendar-day {\r\n//   background: #fff;\r\n//   border: 1px solid #ddd;\r\n//   border-radius: 8px;\r\n//   padding: 10px;\r\n//   min-height: 100px; /* Set a consistent height */\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: space-between;\r\n//   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n//   position: relative;\r\n// }\r\n\r\n// .calendar-day.empty {\r\n//   background: transparent;\r\n//   border: none;\r\n// }\r\n\r\n// .date {\r\n//   font-size: 16px;\r\n//   font-weight: bold;\r\n//   color: #444;\r\n//   text-align: right;\r\n// }\r\n\r\n// .events {\r\n//   margin-top: 10px;\r\n//   overflow-y: auto; /* Allow scrolling if too many events */\r\n//   max-height: 80px;\r\n// }\r\n\r\n// .event {\r\n//   background: #d9eaff;\r\n//   color: #0056b3;\r\n//   font-size: 12px;\r\n//   margin: 3px 0;\r\n//   padding: 5px;\r\n//   border-radius: 5px;\r\n//   text-align: left;\r\n// }\r\n\r\n// .event:hover {\r\n//   background: #c5dcf6;\r\n// }\r\n\r\n// @media (max-width: 768px) {\r\n//   .calendar-grid {\r\n//     grid-template-columns: repeat(3, 1fr); /* Adjust columns for smaller screens */\r\n//   }\r\n// }\r\n\r\n// @media (max-width: 480px) {\r\n//   .calendar-grid {\r\n//     grid-template-columns: repeat(2, 1fr); /* Adjust columns for mobile screens */\r\n//   }\r\n\r\n//   .calendar-day {\r\n//     min-height: 80px; /* Smaller height for mobile */\r\n//   }\r\n\r\n//   .events {\r\n//     max-height: 50px; /* Adjust event container for mobile */\r\n//   }\r\n// }\r\n\r\n// `}\r\n// </style>\r\n\r\n\r\nimport React from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarComponent = ({ communications }) => {\r\n  const events = communications.map((comm) => ({\r\n    title: `${comm.companyName} - ${comm.communicationType}`,\r\n    start: new Date(comm.scheduledDate),\r\n    end: new Date(comm.scheduledDate), // Assuming single-day events\r\n  }));\r\n\r\n  return (\r\n    <div style={{ height: \"600px\", margin: \"20px\" }}>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AAEzC,MAAMI,iBAAiB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAChD,MAAMC,MAAM,GAAGD,cAAc,CAACE,GAAG,CAAEC,IAAI,KAAM;IAC3CC,KAAK,EAAE,GAAGD,IAAI,CAACE,WAAW,MAAMF,IAAI,CAACG,iBAAiB,EAAE;IACxDC,KAAK,EAAE,IAAIC,IAAI,CAACL,IAAI,CAACM,aAAa,CAAC;IACnCC,GAAG,EAAE,IAAIF,IAAI,CAACL,IAAI,CAACM,aAAa,CAAC,CAAE;EACrC,CAAC,CAAC,CAAC;EAEH,oBACEZ,OAAA;IAAKc,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC9CjB,OAAA,CAACJ,QAAQ;MACPK,SAAS,EAAEA,SAAU;MACrBG,MAAM,EAAEA,MAAO;MACfc,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBL,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAI;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAlBItB,iBAAiB;AAoBvB,eAAeA,iBAAiB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}