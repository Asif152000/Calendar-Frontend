{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md Asif\\\\Desktop\\\\CALENDAR FRONTEND\\\\src\\\\Components\\\\UserModule\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import { Link } from \"react-router-dom\";\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import config from \"../../Common/Configurations/APIConfig\";\n// import { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\n\n// const initialFieldValues = {\n//   companyId: \"00000000-0000-0000-0000-000000000000\",\n//   companyName: \"\",\n//   location: \"\",\n//   linkedInProfile: \"\",\n//   emails: \"\",\n//   phoneNumbers: \"\",\n//   comments: \"\",\n//   communicationPeriodicity: \"\",\n// };\n\n// export default function Dashboard() {\n//   const [lists, setLists] = useState([]);\n//   const [values, setValues] = useState(initialFieldValues);\n//   const [recordForEdit, setRecordForEdit] = useState(null);\n//   const [errors, setErrors] = useState({});\n//   const [btnSubmit, setBtnSubmit] = useState(true);\n//   const [totalPages, setTotalPages] = useState(0);\n//   const [pageSize, setPageSize] = useState(20);\n//   const [pageNumber, setPageNumber] = useState(1);\n//   const [data, setData] = useState([]);\n//   const [totalRecords, setTotalRecords] = useState(0);\n\n//   const headerConfig = {\n//     headers: {\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n\n//   useEffect(() => {\n//     if (recordForEdit !== null) {\n//       setValues(recordForEdit);\n//     }\n//   }, [recordForEdit]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setValues({\n//       ...values,\n//       [name]: value,\n//     });\n//   };\n\n//   const validate = () => {\n//     let temp = {};\n//     temp.companyName = values.companyName !== \"\";\n//     temp.location = values.location !== \"\";\n//     temp.linkedInProfile = values.linkedInProfile !== \"\";\n//     temp.emails = values.emails !== \"\";\n//     temp.phoneNumbers = values.phoneNumbers !== \"\";\n//     temp.comments = values.comments !== \"\";\n//     temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\n//     setErrors(temp);\n//     return Object.values(temp).every((x) => x === true);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (validate()) {\n//       setBtnSubmit(false);\n//       const payload = { ...values };\n//       addOrEdit(payload);\n//     }\n//   };\n//   const handleCommunicationPerformed = () => {\n//     // Logic for marking a communication as performed or any desired action\n//     console.log(\"Communication Performed Button Clicked\");\n//   };\n\n//   const applicationAPI = () => {\n//     return {\n//       create: (newRecord) =>\n//         axios.post(\n//           `${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`,\n//           newRecord,\n//           headerConfig\n//         ),\n//       update: (updateRecord) =>\n//         axios.put(\n//           `${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`,\n//           updateRecord,\n//           headerConfig\n//         ),\n//     };\n//   };\n\n//   const addOrEdit = (payload) => {\n//     if (payload.companyId === initialFieldValues.companyId) {\n//       applicationAPI()\n//         .create(payload)\n//         .then((res) => {\n//           if (res.data.statusCode === 200) {\n//             handleSuccess(\"Record Created\");\n//             resetForm();\n//             getData(pageNumber);\n//           } else {\n//             handleError(res.data.message);\n//           }\n//         })\n//         .catch(() => {\n//           handleError(\"Error in saving data\");\n//         })\n//         .finally(() => setBtnSubmit(true));\n//     } else {\n//       applicationAPI()\n//         .update(payload)\n//         .then((res) => {\n//           if (res.data.statusCode === 200) {\n//             handleSuccess(\"Record Updated\");\n//             resetForm();\n//             getData(pageNumber);\n//           } else {\n//             handleError(res.data.message);\n//           }\n//         })\n//         .catch(() => {\n//           handleError(\"Error in updating data\");\n//         })\n//         .finally(() => setBtnSubmit(true));\n//     }\n//   };\n\n//   const resetForm = () => {\n//     setValues(initialFieldValues);\n//     setErrors({});\n//   };\n\n//   const showEditDetails = (data) => {\n//     setRecordForEdit(data);\n//   };\n\n//   const getData = (number) => {\n//     axios\n//       .get(\n//         `${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`,\n//         headerConfig\n//       )\n//       .then((response) => {\n//         setLists(response.data.data);\n//         setPageNumber(response.data.data.pageNumber);\n//         setPageSize(response.data.data.pageSize);\n//         setTotalPages(response.data.data.totalPages);\n//         setData(response.data.data);\n//         setTotalRecords(response.data.data.totalRecords);\n//       });\n//   };\n\n//   useEffect(() => {\n//     getData(pageNumber);\n//   }, []);\n\n//   const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\n//     const page = index + 1;\n//     return (\n//       <li\n//         className=\"page-item\"\n//         key={page}\n//         onClick={() => getData(page)}\n//       >\n//         <Link className=\"page-link\">{page}</Link>\n//       </li>\n//     );\n//   });\n\n// return (\n//     <div className=\"row\">\n//   <div className=\"col-xl-12\">\n//     <div className=\"card card-height-100\">\n//       <div className=\"card-header align-items-center d-flex\">\n//         <h4 className=\"card-title mb-0 flex-grow-1\">Communications</h4>\n//         {/* Add the button */}\n//         <button \n//           className=\"btn btn-primary ms-auto\" \n//           onClick={() => handleCommunicationPerformed()}\n//         >\n//           Communication Performed\n//         </button>\n//       </div>\n//       <div className=\"card-body\">\n//         <div className=\"table-responsive table-card\">\n//           <table className=\"table align-middle\">\n//             <thead className=\"table-light\">\n//               <tr>\n//                 <th>S.No</th>\n//                 <th>Select</th>\n//                 <th>Company Name</th>\n//                 <th>Last Communication</th>\n//                 <th>Next Communication</th>\n//                 <th>Highlight</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {lists.length > 0 ? (\n//                 lists.map((company, index) => {\n//                   // Extract communications for the company\n//                   const lastCommunications = company.communications.filter(\n//                     (c) => c.status === true\n//                   );\n//                   const nextCommunications = company.communications.find(\n//                     (c) => c.status === false\n//                   );\n\n//                   return (\n//                     <tr key={company.companyId}>\n//                       <td>{index + 1}</td>\n//                       <td>\n//                         <input type=\"checkbox\" />\n//                       </td>\n//                       <td>{company.companyName}</td>\n//                       <td>\n//                         {lastCommunications.length > 0 ? (\n//                           <>\n//                             {lastCommunications.map((communication, idx) => (\n//                               <div key={idx}>\n//                                 {communication.communicationName} -{\" \"}\n//                                 {new Date(\n//                                   communication.scheduledDate\n//                                 ).toLocaleDateString()}\n//                               </div>\n//                             ))}\n//                           </>\n//                         ) : (\n//                           \"No Completed Communications\"\n//                         )}\n//                       </td>\n//                       <td>\n//                         {nextCommunications ? (\n//                           <>\n//                             {nextCommunications.communicationName} -{\" \"}\n//                             {new Date(\n//                               nextCommunications.scheduledDate\n//                             ).toLocaleDateString()}\n//                           </>\n//                         ) : (\n//                           \"No Upcoming Communication\"\n//                         )}\n//                       </td>\n//                       <td>\n//                         <button className=\"btn btn-link text-danger\">\n//                           Disable Highlight\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   );\n//                 })\n//               ) : (\n//                 <tr>\n//                   <td colSpan=\"6\" className=\"text-center\">\n//                     No data available\n//                   </td>\n//                 </tr>\n//               )}\n//             </tbody>\n\n//               </table>\n//             </div>\n//                    <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\n//                      <div className=\"flex-shrink-0\">\n//                        <div className=\"text-muted\">\n//                          Showing{\" \"}\n//                          <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\n//                          <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\n//                          Results\n//                        </div>\n//                      </div>\n//                      {/* <ul className=\"pagination pagination-separated pagination-sm mb-0\">\n//                        <li\n//                          className={\n//                            \"page-item\" + data.previousPage === null\n//                              ? \"disabled\"\n//                              : \"\"\n//                          }\n//                          onClick={() => GetFirstPageData()}\n//                        >\n//                          <Link className=\"page-link\">Previous</Link>\n//                        </li>\n//                        {renderPageNumbers}\n//                        <li\n//                          className={\n//                            \"page-item\" + data.nextPage === null\n//                              ? \"disabled\"\n//                              : \"\"\n//                          }\n//                          onClick={() => GetLastPageData()}\n//                        >\n//                          <Link className=\"page-link\">Next</Link>\n//                        </li>\n//                      </ul> */}\n//                    </div>\n//                  </div>\n//                </div>\n//              </div>\n//            </div>\n\n//  );\n// }\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport config from \"../../Common/Configurations/APIConfig\";\nimport { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\nimport Flatpickr from \"react-flatpickr\"; // Import Flatpickr\nimport \"flatpickr/dist/themes/material_blue.css\"; // Import Flatpickr theme\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFieldValues = {\n  companyId: \"00000000-0000-0000-0000-000000000000\",\n  companyName: \"\",\n  location: \"\",\n  linkedInProfile: \"\",\n  emails: \"\",\n  phoneNumbers: \"\",\n  comments: \"\",\n  communicationPeriodicity: \"\"\n};\nexport default function Dashboard() {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [values, setValues] = useState(initialFieldValues);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [btnSubmit, setBtnSubmit] = useState(true);\n  const [totalPages, setTotalPages] = useState(0);\n  const [pageSize, setPageSize] = useState(20);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [data, setData] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedCommunication, setSelectedCommunication] = useState(\"\");\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [notes, setNotes] = useState(\"\");\n  const [selectedCompany, setSelectedCompany] = useState(null); // Track the selected company\n  const [selectedCompanies, setSelectedCompanies] = useState([]);\n  const headerConfig = {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  useEffect(() => {\n    if (recordForEdit !== null) {\n      setValues(recordForEdit);\n    }\n  }, [recordForEdit]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n  const validate = () => {\n    let temp = {};\n    temp.companyName = values.companyName !== \"\";\n    temp.location = values.location !== \"\";\n    temp.linkedInProfile = values.linkedInProfile !== \"\";\n    temp.emails = values.emails !== \"\";\n    temp.phoneNumbers = values.phoneNumbers !== \"\";\n    temp.comments = values.comments !== \"\";\n    temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\n    setErrors(temp);\n    return Object.values(temp).every(x => x === true);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      setBtnSubmit(false);\n      const payload = {\n        ...values\n      };\n      addOrEdit(payload);\n    }\n  };\n  const handleCommunicationPerformed = () => {\n    console.log('Selected companies:', selectedCompanies);\n    if (selectedCompanies.length > 0) {\n      // Open modal with the selected company IDs\n      setShowModal(true); // Open the modal\n      console.log(\"ShowModal set to true\");\n    } else {\n      alert('Please select at least one company!');\n    }\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedCompanies([]); // Reset selected companies when closing modal\n  };\n  const handleModalSubmit = () => {\n    const payload = {\n      selectedCompanies,\n      selectedCommunication,\n      selectedDate,\n      notes\n    };\n    console.log('Submitting payload:', payload);\n    // Call your API to submit the data\n    setShowModal(false);\n  };\n  const handleCheckboxChange = companyId => {\n    setSelectedCompanies(prevSelectedCompanies => {\n      if (prevSelectedCompanies.includes(companyId)) {\n        // Deselect company\n        return prevSelectedCompanies.filter(id => id !== companyId);\n      } else {\n        // Select company\n        return [...prevSelectedCompanies, companyId];\n      }\n    });\n  };\n\n  // Open the modal\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  // Close the modal\n\n  const isToday = date => {\n    const today = new Date();\n    return date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear();\n  };\n  const isPast = date => date < new Date();\n  const applicationAPI = () => {\n    return {\n      create: newRecord => axios.post(`${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`, newRecord, headerConfig),\n      update: updateRecord => axios.put(`${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`, updateRecord, headerConfig)\n    };\n  };\n  const addOrEdit = payload => {\n    if (payload.companyId === initialFieldValues.companyId) {\n      applicationAPI().create(payload).then(res => {\n        if (res.data.statusCode === 200) {\n          handleSuccess(\"Record Created\");\n          resetForm();\n          getData(pageNumber);\n        } else {\n          handleError(res.data.message);\n        }\n      }).catch(() => {\n        handleError(\"Error in saving data\");\n      }).finally(() => setBtnSubmit(true));\n    } else {\n      applicationAPI().update(payload).then(res => {\n        if (res.data.statusCode === 200) {\n          handleSuccess(\"Record Updated\");\n          resetForm();\n          getData(pageNumber);\n        } else {\n          handleError(res.data.message);\n        }\n      }).catch(() => {\n        handleError(\"Error in updating data\");\n      }).finally(() => setBtnSubmit(true));\n    }\n  };\n  const resetForm = () => {\n    setValues(initialFieldValues);\n    setErrors({});\n  };\n  const showEditDetails = data => {\n    setRecordForEdit(data);\n  };\n  const getData = number => {\n    axios.get(`${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`, headerConfig).then(response => {\n      setLists(response.data.data);\n      setPageNumber(response.data.data.pageNumber);\n      setPageSize(response.data.data.pageSize);\n      setTotalPages(response.data.data.totalPages);\n      setData(response.data.data);\n      setTotalRecords(response.data.data.totalRecords);\n    });\n  };\n  useEffect(() => {\n    getData(pageNumber);\n  }, []);\n  const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\n    const page = index + 1;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"page-item\",\n      onClick: () => getData(page),\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"page-link\",\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 17\n      }, this)\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-xl-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-height-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header align-items-center d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title mb-0 flex-grow-1\",\n            children: \"Communications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary ms-auto\",\n            onClick: handleCommunicationPerformed,\n            disabled: selectedCompanies.length === 0 // Disable button if no company is selected\n            ,\n            children: \"Communication Performed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            background: 'white',\n            border: '1px solid #ccc',\n            borderRadius: '8px',\n            width: '400px',\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n            zIndex: 1000,\n            padding: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Communication Performed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"communicationSelect\",\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"Communication:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"communicationSelect\",\n                style: {\n                  width: '100%',\n                  padding: '8px',\n                  marginTop: '5px',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px'\n                },\n                value: selectedCommunication,\n                onChange: e => setSelectedCommunication(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Communication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 21\n                }, this), communications.map(comm => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: comm.communicationId,\n                  children: comm.communicationName\n                }, comm.communicationId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"updatedDate\",\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"Updated Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                id: \"updatedDate\",\n                value: selectedDate,\n                onChange: date => setSelectedDate(date),\n                options: {\n                  dateFormat: 'Y-m-d'\n                },\n                style: {\n                  width: '100%',\n                  padding: '8px',\n                  marginTop: '5px',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"notes\",\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: \"Add Notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"notes\",\n                value: notes,\n                onChange: e => setNotes(e.target.value),\n                rows: \"4\",\n                style: {\n                  width: '100%',\n                  padding: '8px',\n                  marginTop: '5px',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                padding: '8px 16px',\n                background: '#ccc',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              onClick: handleCloseModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                padding: '8px 16px',\n                background: '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              onClick: handleModalSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive table-card\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table align-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"table-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"S.No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Last Communication\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Next Communication\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 690,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: lists.length > 0 ? lists.map((company, index) => {\n                  // Extract communications for the company\n                  const lastCommunications = company.communications.filter(c => c.status === true);\n                  const nextCommunications = company.communications.find(c => c.status === false);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 706,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: selectedCompanies.includes(company.companyId),\n                        onChange: () => handleCheckboxChange(company.companyId)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 708,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: company.companyName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 714,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: lastCommunications.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: lastCommunications.map((communication, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [communication.communicationName, \" -\", \" \", new Date(communication.scheduledDate).toLocaleDateString()]\n                        }, idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 719,\n                          columnNumber: 69\n                        }, this))\n                      }, void 0, false) : \"No Completed Communications\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 715,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: nextCommunications ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: isToday(new Date(nextCommunications.scheduledDate)) ? \"yellow\" : isPast(new Date(nextCommunications.scheduledDate)) ? \"red\" : \"inherit\",\n                            fontWeight: \"bold\" // Make the text bold\n                          },\n                          children: nextCommunications.communicationName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 734,\n                          columnNumber: 65\n                        }, this), \" \", \"-\", \" \", new Date(nextCommunications.scheduledDate).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 748,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          className: \"btn btn-link text-danger\",\n                          children: \"Disable Highlight\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 749,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true) : \"No Upcoming Communication\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 53\n                    }, this)]\n                  }, company.companyId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 705,\n                    columnNumber: 49\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colSpan: \"6\",\n                    className: \"text-center\",\n                    children: \"No data available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"align-items-center mt-4 pt-2 justify-content-between d-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                children: [\"Showing\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fw-semibold\",\n                  children: lists.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 37\n                }, this), \" of\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"fw-semibold\",\n                  children: totalRecords\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 37\n                }, this), \" \", \"Results\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 541,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"M8X6B9EaiqnoAIkZ5wC/ezBL99A=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Link","useState","useEffect","axios","config","handleSuccess","handleError","Flatpickr","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFieldValues","companyId","companyName","location","linkedInProfile","emails","phoneNumbers","comments","communicationPeriodicity","Dashboard","_s","lists","setLists","values","setValues","recordForEdit","setRecordForEdit","errors","setErrors","btnSubmit","setBtnSubmit","totalPages","setTotalPages","pageSize","setPageSize","pageNumber","setPageNumber","data","setData","totalRecords","setTotalRecords","showModal","setShowModal","selectedCommunication","setSelectedCommunication","selectedDate","setSelectedDate","Date","notes","setNotes","selectedCompany","setSelectedCompany","selectedCompanies","setSelectedCompanies","headerConfig","headers","Authorization","localStorage","getItem","handleInputChange","e","name","value","target","validate","temp","Object","every","x","handleSubmit","preventDefault","payload","addOrEdit","handleCommunicationPerformed","console","log","length","alert","handleCloseModal","handleModalSubmit","handleCheckboxChange","prevSelectedCompanies","includes","filter","id","openModal","isToday","date","today","getDate","getMonth","getFullYear","isPast","applicationAPI","create","newRecord","post","APIACTIVATEURL","CREATECOMPANYMANAGEMENT","update","updateRecord","put","UPDATECOMPANYMANAGEMENT","then","res","statusCode","resetForm","getData","message","catch","finally","showEditDetails","number","get","GETCOMMUNICATION","response","renderPageNumbers","Array","map","_","index","page","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","style","position","top","left","transform","background","border","borderRadius","width","boxShadow","zIndex","padding","marginBottom","htmlFor","fontWeight","marginTop","onChange","communications","comm","communicationId","communicationName","options","dateFormat","rows","display","justifyContent","gap","cursor","color","company","lastCommunications","c","status","nextCommunications","find","type","checked","communication","idx","scheduledDate","toLocaleDateString","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/Md Asif/Desktop/CALENDAR FRONTEND/src/Components/UserModule/Dashboard.js"],"sourcesContent":["// import { Link } from \"react-router-dom\";\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import config from \"../../Common/Configurations/APIConfig\";\r\n// import { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\r\n\r\n// const initialFieldValues = {\r\n//   companyId: \"00000000-0000-0000-0000-000000000000\",\r\n//   companyName: \"\",\r\n//   location: \"\",\r\n//   linkedInProfile: \"\",\r\n//   emails: \"\",\r\n//   phoneNumbers: \"\",\r\n//   comments: \"\",\r\n//   communicationPeriodicity: \"\",\r\n// };\r\n\r\n// export default function Dashboard() {\r\n//   const [lists, setLists] = useState([]);\r\n//   const [values, setValues] = useState(initialFieldValues);\r\n//   const [recordForEdit, setRecordForEdit] = useState(null);\r\n//   const [errors, setErrors] = useState({});\r\n//   const [btnSubmit, setBtnSubmit] = useState(true);\r\n//   const [totalPages, setTotalPages] = useState(0);\r\n//   const [pageSize, setPageSize] = useState(20);\r\n//   const [pageNumber, setPageNumber] = useState(1);\r\n//   const [data, setData] = useState([]);\r\n//   const [totalRecords, setTotalRecords] = useState(0);\r\n\r\n//   const headerConfig = {\r\n//     headers: {\r\n//       Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (recordForEdit !== null) {\r\n//       setValues(recordForEdit);\r\n//     }\r\n//   }, [recordForEdit]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setValues({\r\n//       ...values,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const validate = () => {\r\n//     let temp = {};\r\n//     temp.companyName = values.companyName !== \"\";\r\n//     temp.location = values.location !== \"\";\r\n//     temp.linkedInProfile = values.linkedInProfile !== \"\";\r\n//     temp.emails = values.emails !== \"\";\r\n//     temp.phoneNumbers = values.phoneNumbers !== \"\";\r\n//     temp.comments = values.comments !== \"\";\r\n//     temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\r\n//     setErrors(temp);\r\n//     return Object.values(temp).every((x) => x === true);\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     if (validate()) {\r\n//       setBtnSubmit(false);\r\n//       const payload = { ...values };\r\n//       addOrEdit(payload);\r\n//     }\r\n//   };\r\n//   const handleCommunicationPerformed = () => {\r\n//     // Logic for marking a communication as performed or any desired action\r\n//     console.log(\"Communication Performed Button Clicked\");\r\n//   };\r\n\r\n//   const applicationAPI = () => {\r\n//     return {\r\n//       create: (newRecord) =>\r\n//         axios.post(\r\n//           `${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`,\r\n//           newRecord,\r\n//           headerConfig\r\n//         ),\r\n//       update: (updateRecord) =>\r\n//         axios.put(\r\n//           `${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`,\r\n//           updateRecord,\r\n//           headerConfig\r\n//         ),\r\n//     };\r\n//   };\r\n\r\n//   const addOrEdit = (payload) => {\r\n//     if (payload.companyId === initialFieldValues.companyId) {\r\n//       applicationAPI()\r\n//         .create(payload)\r\n//         .then((res) => {\r\n//           if (res.data.statusCode === 200) {\r\n//             handleSuccess(\"Record Created\");\r\n//             resetForm();\r\n//             getData(pageNumber);\r\n//           } else {\r\n//             handleError(res.data.message);\r\n//           }\r\n//         })\r\n//         .catch(() => {\r\n//           handleError(\"Error in saving data\");\r\n//         })\r\n//         .finally(() => setBtnSubmit(true));\r\n//     } else {\r\n//       applicationAPI()\r\n//         .update(payload)\r\n//         .then((res) => {\r\n//           if (res.data.statusCode === 200) {\r\n//             handleSuccess(\"Record Updated\");\r\n//             resetForm();\r\n//             getData(pageNumber);\r\n//           } else {\r\n//             handleError(res.data.message);\r\n//           }\r\n//         })\r\n//         .catch(() => {\r\n//           handleError(\"Error in updating data\");\r\n//         })\r\n//         .finally(() => setBtnSubmit(true));\r\n//     }\r\n//   };\r\n\r\n//   const resetForm = () => {\r\n//     setValues(initialFieldValues);\r\n//     setErrors({});\r\n//   };\r\n\r\n//   const showEditDetails = (data) => {\r\n//     setRecordForEdit(data);\r\n//   };\r\n\r\n//   const getData = (number) => {\r\n//     axios\r\n//       .get(\r\n//         `${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`,\r\n//         headerConfig\r\n//       )\r\n//       .then((response) => {\r\n//         setLists(response.data.data);\r\n//         setPageNumber(response.data.data.pageNumber);\r\n//         setPageSize(response.data.data.pageSize);\r\n//         setTotalPages(response.data.data.totalPages);\r\n//         setData(response.data.data);\r\n//         setTotalRecords(response.data.data.totalRecords);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getData(pageNumber);\r\n//   }, []);\r\n\r\n//   const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\r\n//     const page = index + 1;\r\n//     return (\r\n//       <li\r\n//         className=\"page-item\"\r\n//         key={page}\r\n//         onClick={() => getData(page)}\r\n//       >\r\n//         <Link className=\"page-link\">{page}</Link>\r\n//       </li>\r\n//     );\r\n//   });\r\n\r\n// return (\r\n//     <div className=\"row\">\r\n//   <div className=\"col-xl-12\">\r\n//     <div className=\"card card-height-100\">\r\n//       <div className=\"card-header align-items-center d-flex\">\r\n//         <h4 className=\"card-title mb-0 flex-grow-1\">Communications</h4>\r\n//         {/* Add the button */}\r\n//         <button \r\n//           className=\"btn btn-primary ms-auto\" \r\n//           onClick={() => handleCommunicationPerformed()}\r\n//         >\r\n//           Communication Performed\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"card-body\">\r\n//         <div className=\"table-responsive table-card\">\r\n//           <table className=\"table align-middle\">\r\n//             <thead className=\"table-light\">\r\n//               <tr>\r\n//                 <th>S.No</th>\r\n//                 <th>Select</th>\r\n//                 <th>Company Name</th>\r\n//                 <th>Last Communication</th>\r\n//                 <th>Next Communication</th>\r\n//                 <th>Highlight</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {lists.length > 0 ? (\r\n//                 lists.map((company, index) => {\r\n//                   // Extract communications for the company\r\n//                   const lastCommunications = company.communications.filter(\r\n//                     (c) => c.status === true\r\n//                   );\r\n//                   const nextCommunications = company.communications.find(\r\n//                     (c) => c.status === false\r\n//                   );\r\n\r\n//                   return (\r\n//                     <tr key={company.companyId}>\r\n//                       <td>{index + 1}</td>\r\n//                       <td>\r\n//                         <input type=\"checkbox\" />\r\n//                       </td>\r\n//                       <td>{company.companyName}</td>\r\n//                       <td>\r\n//                         {lastCommunications.length > 0 ? (\r\n//                           <>\r\n//                             {lastCommunications.map((communication, idx) => (\r\n//                               <div key={idx}>\r\n//                                 {communication.communicationName} -{\" \"}\r\n//                                 {new Date(\r\n//                                   communication.scheduledDate\r\n//                                 ).toLocaleDateString()}\r\n//                               </div>\r\n//                             ))}\r\n//                           </>\r\n//                         ) : (\r\n//                           \"No Completed Communications\"\r\n//                         )}\r\n//                       </td>\r\n//                       <td>\r\n//                         {nextCommunications ? (\r\n//                           <>\r\n//                             {nextCommunications.communicationName} -{\" \"}\r\n//                             {new Date(\r\n//                               nextCommunications.scheduledDate\r\n//                             ).toLocaleDateString()}\r\n//                           </>\r\n//                         ) : (\r\n//                           \"No Upcoming Communication\"\r\n//                         )}\r\n//                       </td>\r\n//                       <td>\r\n//                         <button className=\"btn btn-link text-danger\">\r\n//                           Disable Highlight\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   );\r\n//                 })\r\n//               ) : (\r\n//                 <tr>\r\n//                   <td colSpan=\"6\" className=\"text-center\">\r\n//                     No data available\r\n//                   </td>\r\n//                 </tr>\r\n//               )}\r\n//             </tbody>\r\n\r\n\r\n\r\n//               </table>\r\n//             </div>\r\n//                    <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\r\n//                      <div className=\"flex-shrink-0\">\r\n//                        <div className=\"text-muted\">\r\n//                          Showing{\" \"}\r\n//                          <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\r\n//                          <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\r\n//                          Results\r\n//                        </div>\r\n//                      </div>\r\n//                      {/* <ul className=\"pagination pagination-separated pagination-sm mb-0\">\r\n//                        <li\r\n//                          className={\r\n//                            \"page-item\" + data.previousPage === null\r\n//                              ? \"disabled\"\r\n//                              : \"\"\r\n//                          }\r\n//                          onClick={() => GetFirstPageData()}\r\n//                        >\r\n//                          <Link className=\"page-link\">Previous</Link>\r\n//                        </li>\r\n//                        {renderPageNumbers}\r\n//                        <li\r\n//                          className={\r\n//                            \"page-item\" + data.nextPage === null\r\n//                              ? \"disabled\"\r\n//                              : \"\"\r\n//                          }\r\n//                          onClick={() => GetLastPageData()}\r\n//                        >\r\n//                          <Link className=\"page-link\">Next</Link>\r\n//                        </li>\r\n//                      </ul> */}\r\n//                    </div>\r\n//                  </div>\r\n//                </div>\r\n//              </div>\r\n//            </div>\r\n\r\n\r\n//  );\r\n// }\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../../Common/Configurations/APIConfig\";\r\nimport { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\r\nimport Flatpickr from \"react-flatpickr\"; // Import Flatpickr\r\nimport \"flatpickr/dist/themes/material_blue.css\"; // Import Flatpickr theme\r\n\r\n\r\nconst initialFieldValues = {\r\n    companyId: \"00000000-0000-0000-0000-000000000000\",\r\n    companyName: \"\",\r\n    location: \"\",\r\n    linkedInProfile: \"\",\r\n    emails: \"\",\r\n    phoneNumbers: \"\",\r\n    comments: \"\",\r\n    communicationPeriodicity: \"\",\r\n};\r\n\r\nexport default function Dashboard() {\r\n    const [lists, setLists] = useState([]);\r\n    const [values, setValues] = useState(initialFieldValues);\r\n    const [recordForEdit, setRecordForEdit] = useState(null);\r\n    const [errors, setErrors] = useState({});\r\n    const [btnSubmit, setBtnSubmit] = useState(true);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [pageSize, setPageSize] = useState(20);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [data, setData] = useState([]);\r\n    const [totalRecords, setTotalRecords] = useState(0);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedCommunication, setSelectedCommunication] = useState(\"\");\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const [notes, setNotes] = useState(\"\");\r\n    const [selectedCompany, setSelectedCompany] = useState(null); // Track the selected company\r\n    const [selectedCompanies, setSelectedCompanies] = useState([]);\r\n\r\n    const headerConfig = {\r\n        headers: {\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit !== null) {\r\n            setValues(recordForEdit);\r\n        }\r\n    }, [recordForEdit]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const validate = () => {\r\n        let temp = {};\r\n        temp.companyName = values.companyName !== \"\";\r\n        temp.location = values.location !== \"\";\r\n        temp.linkedInProfile = values.linkedInProfile !== \"\";\r\n        temp.emails = values.emails !== \"\";\r\n        temp.phoneNumbers = values.phoneNumbers !== \"\";\r\n        temp.comments = values.comments !== \"\";\r\n        temp.communicationPeriodicity = values.communicationPeriodicity !== \"\";\r\n        setErrors(temp);\r\n        return Object.values(temp).every((x) => x === true);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (validate()) {\r\n            setBtnSubmit(false);\r\n            const payload = { ...values };\r\n            addOrEdit(payload);\r\n        }\r\n    };\r\n    const handleCommunicationPerformed = () => {\r\n        console.log('Selected companies:', selectedCompanies);\r\n        if (selectedCompanies.length > 0) {\r\n          // Open modal with the selected company IDs\r\n          setShowModal(true);  // Open the modal\r\n          console.log(\"ShowModal set to true\");\r\n        } else {\r\n          alert('Please select at least one company!');\r\n        }\r\n      };\r\n    \r\n      const handleCloseModal = () => {\r\n        setShowModal(false);\r\n        setSelectedCompanies([]);  // Reset selected companies when closing modal\r\n      };\r\n      const handleModalSubmit = () => {\r\n        const payload = {\r\n            selectedCompanies,\r\n            selectedCommunication,\r\n            selectedDate,\r\n            notes,\r\n        };\r\n        console.log('Submitting payload:', payload);\r\n        // Call your API to submit the data\r\n        setShowModal(false);\r\n    };\r\n    \r\n    \r\n    const handleCheckboxChange = (companyId) => {\r\n        setSelectedCompanies((prevSelectedCompanies) => {\r\n          if (prevSelectedCompanies.includes(companyId)) {\r\n            // Deselect company\r\n            return prevSelectedCompanies.filter((id) => id !== companyId);\r\n          } else {\r\n            // Select company\r\n            return [...prevSelectedCompanies, companyId];\r\n          }\r\n        });\r\n      };\r\n\r\n  // Open the modal\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Close the modal\r\n \r\n    const isToday = (date) => {\r\n        const today = new Date();\r\n        return (\r\n            date.getDate() === today.getDate() &&\r\n            date.getMonth() === today.getMonth() &&\r\n            date.getFullYear() === today.getFullYear()\r\n        );\r\n    };\r\n    const isPast = (date) => date < new Date();\r\n\r\n    const applicationAPI = () => {\r\n        return {\r\n            create: (newRecord) =>\r\n                axios.post(\r\n                    `${config.APIACTIVATEURL}${config.CREATECOMPANYMANAGEMENT}`,\r\n                    newRecord,\r\n                    headerConfig\r\n                ),\r\n            update: (updateRecord) =>\r\n                axios.put(\r\n                    `${config.APIACTIVATEURL}${config.UPDATECOMPANYMANAGEMENT}`,\r\n                    updateRecord,\r\n                    headerConfig\r\n                ),\r\n        };\r\n    };\r\n\r\n    const addOrEdit = (payload) => {\r\n        if (payload.companyId === initialFieldValues.companyId) {\r\n            applicationAPI()\r\n                .create(payload)\r\n                .then((res) => {\r\n                    if (res.data.statusCode === 200) {\r\n                        handleSuccess(\"Record Created\");\r\n                        resetForm();\r\n                        getData(pageNumber);\r\n                    } else {\r\n                        handleError(res.data.message);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    handleError(\"Error in saving data\");\r\n                })\r\n                .finally(() => setBtnSubmit(true));\r\n        } else {\r\n            applicationAPI()\r\n                .update(payload)\r\n                .then((res) => {\r\n                    if (res.data.statusCode === 200) {\r\n                        handleSuccess(\"Record Updated\");\r\n                        resetForm();\r\n                        getData(pageNumber);\r\n                    } else {\r\n                        handleError(res.data.message);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    handleError(\"Error in updating data\");\r\n                })\r\n                .finally(() => setBtnSubmit(true));\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFieldValues);\r\n        setErrors({});\r\n    };\r\n\r\n    const showEditDetails = (data) => {\r\n        setRecordForEdit(data);\r\n    };\r\n\r\n    const getData = (number) => {\r\n        axios\r\n            .get(\r\n                `${config.APIACTIVATEURL}${config.GETCOMMUNICATION}?pageNumber=${number}&pageSize=${pageSize}`,\r\n                headerConfig\r\n            )\r\n            .then((response) => {\r\n                setLists(response.data.data);\r\n                setPageNumber(response.data.data.pageNumber);\r\n                setPageSize(response.data.data.pageSize);\r\n                setTotalPages(response.data.data.totalPages);\r\n                setData(response.data.data);\r\n                setTotalRecords(response.data.data.totalRecords);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData(pageNumber);\r\n    }, []);\r\n\r\n    const renderPageNumbers = [...Array(totalPages)].map((_, index) => {\r\n        const page = index + 1;\r\n        return (\r\n            <li\r\n                className=\"page-item\"\r\n                key={page}\r\n                onClick={() => getData(page)}\r\n            >\r\n                <Link className=\"page-link\">{page}</Link>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n                <div className=\"card card-height-100\">\r\n                    <div className=\"card-header align-items-center d-flex\">\r\n                        <h4 className=\"card-title mb-0 flex-grow-1\">Communications</h4>\r\n                        {/* Add the button */}\r\n                        {/* <button\r\n    className=\"btn btn-primary ms-auto\"\r\n    onClick={() => {\r\n        console.log('Communication Performed clicked');\r\n        handleCommunicationPerformed();\r\n    }}\r\n    disabled={selectedCompanies.length === 0} // Disable button if no company is selected\r\n>\r\n    Communication Performed\r\n</button> */}\r\n<button\r\n                className=\"btn btn-primary ms-auto\"\r\n                onClick={handleCommunicationPerformed}\r\n                disabled={selectedCompanies.length === 0} // Disable button if no company is selected\r\n              >\r\n                Communication Performed\r\n              </button>\r\n\r\n                    </div>\r\n                  {/* Modal */}\r\n{showModal && (\r\n    <div\r\n        style={{\r\n            position: 'fixed',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            background: 'white',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '8px',\r\n            width: '400px',\r\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n            zIndex: 1000,\r\n            padding: '20px',\r\n        }}\r\n    >\r\n        <div>\r\n            <h5>Communication Performed</h5>\r\n            <hr />\r\n        </div>\r\n        <div style={{ marginBottom: '20px' }}>\r\n            {/* Dropdown for Communication */}\r\n            <div style={{ marginBottom: '10px' }}>\r\n                <label htmlFor=\"communicationSelect\" style={{ fontWeight: 'bold' }}>Communication:</label>\r\n                <select\r\n                    id=\"communicationSelect\"\r\n                    style={{\r\n                        width: '100%',\r\n                        padding: '8px',\r\n                        marginTop: '5px',\r\n                        border: '1px solid #ccc',\r\n                        borderRadius: '4px',\r\n                    }}\r\n                    value={selectedCommunication}\r\n                    onChange={(e) => setSelectedCommunication(e.target.value)}\r\n                >\r\n                    <option value=\"\">Select Communication</option>\r\n                    {communications.map((comm) => (\r\n                        <option key={comm.communicationId} value={comm.communicationId}>\r\n                            {comm.communicationName}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Flatpickr for Date */}\r\n            <div style={{ marginBottom: '10px' }}>\r\n                <label htmlFor=\"updatedDate\" style={{ fontWeight: 'bold' }}>Updated Date:</label>\r\n                <Flatpickr\r\n                    id=\"updatedDate\"\r\n                    value={selectedDate}\r\n                    onChange={(date) => setSelectedDate(date)}\r\n                    options={{ dateFormat: 'Y-m-d' }}\r\n                    style={{\r\n                        width: '100%',\r\n                        padding: '8px',\r\n                        marginTop: '5px',\r\n                        border: '1px solid #ccc',\r\n                        borderRadius: '4px',\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {/* Notes Textarea */}\r\n            <div>\r\n                <label htmlFor=\"notes\" style={{ fontWeight: 'bold' }}>Add Notes:</label>\r\n                <textarea\r\n                    id=\"notes\"\r\n                    value={notes}\r\n                    onChange={(e) => setNotes(e.target.value)}\r\n                    rows=\"4\"\r\n                    style={{\r\n                        width: '100%',\r\n                        padding: '8px',\r\n                        marginTop: '5px',\r\n                        border: '1px solid #ccc',\r\n                        borderRadius: '4px',\r\n                    }}\r\n                ></textarea>\r\n            </div>\r\n        </div>\r\n\r\n        {/* Footer Buttons */}\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\r\n            <button\r\n                style={{\r\n                    padding: '8px 16px',\r\n                    background: '#ccc',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                }}\r\n                onClick={handleCloseModal}\r\n            >\r\n                Cancel\r\n            </button>\r\n            <button\r\n                style={{\r\n                    padding: '8px 16px',\r\n                    background: '#007bff',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                }}\r\n                onClick={handleModalSubmit}\r\n            >\r\n                Submit\r\n            </button>\r\n        </div>\r\n    </div>\r\n)}\r\n\r\n  \r\n      <div className=\"card-body\">\r\n                        <div className=\"table-responsive table-card\">\r\n                            <table className=\"table align-middle\">\r\n                                <thead className=\"table-light\">\r\n                                    <tr>\r\n                                        <th>S.No</th>\r\n                                        <th>Select</th>\r\n                                        <th>Company Name</th>\r\n                                        <th>Last Communication</th>\r\n                                        <th>Next Communication</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {lists.length > 0 ? (\r\n                                        lists.map((company, index) => {\r\n                                            // Extract communications for the company\r\n                                            const lastCommunications = company.communications.filter(\r\n                                                (c) => c.status === true\r\n                                            );\r\n                                            const nextCommunications = company.communications.find(\r\n                                                (c) => c.status === false\r\n                                            );\r\n\r\n                                            return (\r\n                                                <tr key={company.companyId}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td>\r\n                                                    <input\r\n                                                            type=\"checkbox\"\r\n                                                            checked={selectedCompanies.includes(company.companyId)}\r\n                                                            onChange={() => handleCheckboxChange(company.companyId)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td>{company.companyName}</td>\r\n                                                    <td>\r\n                                                        {lastCommunications.length > 0 ? (\r\n                                                            <>\r\n                                                                {lastCommunications.map((communication, idx) => (\r\n                                                                    <div key={idx}>\r\n                                                                        {communication.communicationName} -{\" \"}\r\n                                                                        {new Date(\r\n                                                                            communication.scheduledDate\r\n                                                                        ).toLocaleDateString()}\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            \"No Completed Communications\"\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {nextCommunications ? (\r\n                                                            <>\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                        color: isToday(new Date(nextCommunications.scheduledDate))\r\n                                                                            ? \"yellow\"\r\n                                                                            : isPast(new Date(nextCommunications.scheduledDate))\r\n                                                                                ? \"red\"\r\n                                                                                : \"inherit\",\r\n                                                                        fontWeight: \"bold\", // Make the text bold\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {nextCommunications.communicationName}\r\n                                                                </span>{\" \"}\r\n                                                                -{\" \"}\r\n                                                                {new Date(nextCommunications.scheduledDate).toLocaleDateString()}\r\n                                                                <br />\r\n                                                                <button className=\"btn btn-link text-danger\">\r\n                                                                    Disable Highlight\r\n                                                                </button>\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            \"No Upcoming Communication\"\r\n                                                        )}\r\n                                                    </td>\r\n\r\n\r\n\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    ) : (\r\n                                        <tr>\r\n                                            <td colSpan=\"6\" className=\"text-center\">\r\n                                                No data available\r\n                                            </td>\r\n                                        </tr>\r\n                                    )}\r\n                                </tbody>\r\n\r\n\r\n\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\r\n                            <div className=\"flex-shrink-0\">\r\n                                <div className=\"text-muted\">\r\n                                    Showing{\" \"}\r\n                                    <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\r\n                                    <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\r\n                                    Results\r\n                                </div>\r\n                            </div>\r\n                            {/* <ul className=\"pagination pagination-separated pagination-sm mb-0\">\r\n                       <li\r\n                         className={\r\n                           \"page-item\" + data.previousPage === null\r\n                             ? \"disabled\"\r\n                             : \"\"\r\n                         }\r\n                         onClick={() => GetFirstPageData()}\r\n                       >\r\n                         <Link className=\"page-link\">Previous</Link>\r\n                       </li>\r\n                       {renderPageNumbers}\r\n                       <li\r\n                         className={\r\n                           \"page-item\" + data.nextPage === null\r\n                             ? \"disabled\"\r\n                             : \"\"\r\n                         }\r\n                         onClick={() => GetLastPageData()}\r\n                       >\r\n                         <Link className=\"page-link\">Next</Link>\r\n                       </li>\r\n                     </ul> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n\r\n        </div>\r\n        \r\n\r\n    );\r\n}"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}