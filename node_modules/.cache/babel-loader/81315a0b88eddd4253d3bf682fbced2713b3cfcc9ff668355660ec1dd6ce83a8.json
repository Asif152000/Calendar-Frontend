{"ast":null,"code":"\n// import { Link } from \"react-router-dom\";\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import config from \"../../Common/Configurations/APIConfig\";\n// import { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\n// import LayoutHeader from \"../../Common/Layout/Header\";\n// import LayoutSideBar from \"../../Common/Layout/Sidebar\";\n\n// const initialFieldValues = {\n//  companyId: \"00000000-0000-0000-0000-000000000000\",\n//  companyName: \"\",\n//  location: \"\",\n//  linkedInProfile: \"\",\n//  emails: \"\",\n//  phoneNumbers: \"\",\n//  comments: \"\",\n//  communicationPeriodicity: \"\"\n// };\n// export default function Dashboard() {\n//  const [lists, setLists] = useState([]);\n//  const [values, setValues] = useState(initialFieldValues);\n//  const [recordForEdit, setRecordForEdit] = useState(null);\n//  const [errors, setErrors] = useState({});\n//  const [btnSubmit, setBtnSubmit] = useState(true);\n//  const [totalPages, setTotalPages] = useState(0);\n//  const [pageSize, setPageSize] = useState(20);\n//  const [pageNumber, setPageNumber] = useState(1);\n//  const [data, setData] = useState([]);\n//  const [totalRecords, setTotalRecords] = useState(0);\n//  const [selectedClient, setSelectedClient] = useState(null);\n//  const [emailFields, setEmailFields] = useState([\"\"]); // Manage dynamic email inputs\n//  const [phoneFields, setPhoneFields] = useState([\"\"]); // Manage dynamic phone inputs\n\n//  const headerconfig = {\n//    headers: {\n//      Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\n//      \"Content-Type\": \"application/json\", // For JSON requests\n//    },\n//  };\n\n//  useEffect(() => {\n//    if (recordForEdit !== null) {\n//      setValues(recordForEdit);\n//    }\n//  }, [recordForEdit]);\n\n//  const handleInputChange = (e) => {\n//    const { name, value } = e.target;\n//    setValues({\n//      ...values,\n//      [name]: value,\n//    });\n//  };\n//  const validate = () => {\n//    let temp = {};\n//    temp.companyName = values.companyName === \"\" ? false : true;\n//    temp.location = values.location === \"\" ? false : true;\n//    temp.linkedInProfile = values.linkedInProfile === \"\" ? false : true;\n//    temp.emails = values.emails === \"\" ? false : true;\n//    temp.phoneNumbers = values.phoneNumbers === \"\" ? false : true;\n//    temp.comments = values.comments === \"\" ? false : true;\n//    temp.communicationPeriodicity = values.communicationPeriodicity === \"\" ? false : true;\n//    setErrors(temp);\n//    return Object.values(temp).every((x) => x === true);\n//  };\n\n//  const handleSubmit = (e) => {\n//    e.preventDefault();\n//    if (validate()) {\n//      setBtnSubmit(false);\n//      const payload = {\n//        companyId: values.companyId,\n//        companyName: values.companyName,\n//        location: values.location, // Corrected typo here\n//        linkedInProfile: values.linkedInProfile,\n//        emails: values.emails,\n//        phoneNumbers: values.phoneNumbers,\n//        comments: values.comments,\n//        communicationPeriodicity: values.communicationPeriodicity,\n//      };\n//      addOrEdit(payload);\n//    }\n//  };\n\n//  const applicationAPI = () => {\n//    return {\n//      create: (newrecord) =>\n//        axios.post(config.APIACTIVATEURL + config.CREATECOMPANYMANAGEMENT, newrecord, {\n//          ...headerconfig,\n//        }),\n//      update: (updateRecord) =>\n//        axios.put(config.APIACTIVATEURL + config.UPDATECOMPANYMANAGEMENT, updateRecord, {\n//          ...headerconfig,\n//        }),\n//    };\n//  };\n//  const addOrEdit = (payload) => {\n//    if (payload.companyId === \"00000000-0000-0000-0000-000000000000\") {\n//      applicationAPI()\n//        .create(payload)  // Send as JSON, not FormData\n//        .then((res) => {\n//          if (res.data.statusCode === 200) {\n//            handleSuccess(\"Record Created\");\n//            resetForm();\n//            GetData(pageNumber);\n//            setBtnSubmit(true);\n//          } else {\n//            handleError(res.data.message);\n//            setBtnSubmit(true);\n//          }\n//        })\n//        .catch(function (error) {\n//          handleError(\"Error in saving data\");\n//          setBtnSubmit(true);\n//        });\n//    } else {\n//      applicationAPI()\n//        .update(payload)  // Send as JSON, not FormData\n//        .then((res) => {\n//          if (res.data.statusCode === 200) {\n//            handleSuccess(\"Record Updated\");\n//            resetForm();\n//            GetData(pageNumber);\n//            setBtnSubmit(true);\n//          } else {\n//            handleError(res.data.message);\n//            setBtnSubmit(true);\n//          }\n//        })\n//        .catch(function (error) {\n//          handleError(\"Error in updating data\");\n//          setBtnSubmit(true);\n//        });\n//    }\n//  };\n\n//  const resetForm = () => {\n//    setValues(initialFieldValues);\n//    setErrors({});\n//  };\n//  const showEditDetails = (data) => {\n//    setRecordForEdit(data);\n//  };\n//  const GetLastPageData = () => {\n//    GetData(totalPages);\n//  };\n//  const GetFirstPageData = () => {\n//    GetData(\"1\");\n//  };\n//  const GetPageData = (number) => {\n//    setPageNumber(number);\n//    if (pageNumber !== number) GetData(number);\n//  };\n//  const pageNumbers = [];\n//  for (let i = 1; i <= totalPages; i++) {\n//    pageNumbers.push(i);\n//  }\n//  const renderPageNumbers = pageNumbers.map((number) => {\n//    return (\n//      <li\n//        className=\"page-item\"\n//        key={number}\n//        id={number}\n//        onClick={() => GetPageData(number)}\n//      >\n//        <Link className=\"page-link\">{number}</Link>\n//      </li>\n//    );\n//  });\n\n//  const onDelete = (e, id) => {\n//    if (window.confirm(\"Are you sure to delete this record?\")) {\n//      axios\n//        .delete(config.APIACTIVATEURL + config.DELETECOMPANYMANAGEMENT + \"/\" + id, {\n//          ...headerconfig,\n//        })\n//        .then((response) => {\n//          if (response.data.statusCode === 200) {\n//            handleSuccess(response.data.data);\n//            GetData(pageNumber);\n//            resetForm();\n//          } else {\n//            handleError(response.data.data);\n//            GetData(pageNumber);\n//            resetForm();\n//          }\n//        });\n//    }\n//  };\n//  const GetData = (number) => {\n//    axios\n//      .get(\n//        config.APIACTIVATEURL +\n//          config.GETALLCOMPANYMANAGEMENT +\n//          \"?pageNumber=\" +\n//          number +\n//          \"&pageSize=\" +\n//          pageSize,\n//        { ...headerconfig }\n//      )\n//      .then((response) => {\n//        setLists(response.data.data);\n//        setPageNumber(response.data.data.pageNumber);\n//        setPageSize(response.data.data.pageSize);\n//        setTotalPages(response.data.data.totalPages);\n//        setData(response.data.data);\n//        setTotalRecords(response.data.data.totalRecords);\n//      });\n//  };\n//  const applyErrorClass = (field) =>\n//    field in errors && errors[field] === false ? \" form-control-danger\" : \"\";\n//  useEffect(() => {\n//    GetData(pageNumber);\n//  }, []);\n//  return (\n//    <div id=\"layout-wrapper\">\n//      <LayoutHeader />\n//      <LayoutSideBar />\n//      <div className=\"main-content\">\n//        <div className=\"page-content\">\n//          <div className=\"container-fluid\">\n//            <div className=\"row\">\n//              <div className=\"col-12\">\n//                <div className=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n//                  <h4 className=\"mb-sm-0\">Company Managements</h4>\n//                </div>\n//              </div>\n//            </div>\n//            <div className=\"alert alert-success\">\n//              <form onSubmit={handleSubmit} autoComplete=\"off\" noValidate>\n//                <div className=\"row\">\n//                  <div className=\"col-lg-3\">\n//                    <div className=\"mb-3\">\n//                      <label htmlFor=\"companyName\" className=\"form-label\">\n//                        Company Name \n//                      </label>\n//                      <input\n//                        type=\"text\"\n//                        value={values.companyName}\n//                        name=\"companyName\"\n//                        onChange={handleInputChange}\n//                        className={\n//                          \"form-control\" + applyErrorClass(\"companyName\")\n//                        }\n//                        placeholder=\"Please Enter Company Name \"\n//                      />\n//                      {errors.companyName === false && (\n//                        <div className=\"validationerror\">\n//                          Please enter company name\n//                        </div>\n//                      )}\n//                    </div>\n//                  </div>\n//                  <div className=\"col-lg-3\">\n//                    <div className=\"mb-3\">\n//                      <label htmlFor=\"location\" className=\"form-label\">\n//                        Location\n//                      </label>\n//                      <input\n//                        type=\"text\"\n//                        value={values.location}\n//                        name=\"location\"\n//                        onChange={handleInputChange}\n//                        className={\n//                          \"form-control\" + applyErrorClass(\"location\")\n//                        }\n//                        placeholder=\"Please Enter Location\"\n//                      />\n//                      {errors.location === false && (\n//                        <div className=\"validationerror\">\n//                          Please enter location\n//                        </div>\n//                      )}\n//                    </div>\n//                  </div>\n//                  <div className=\"col-lg-3\">\n//                    <div className=\"mb-3\">\n//                      <label htmlFor=\"linkedInProfile\" className=\"form-label\">\n//                        LinkedIn Profile\n//                      </label>\n//                      <input\n//                        type=\"text\"\n//                        value={values.linkedInProfile}\n//                        name=\"linkedInProfile\"\n//                        onChange={handleInputChange}\n//                        className={\n//                          \"form-control\" + applyErrorClass(\"linkedInProfile\")\n//                        }\n//                        placeholder=\"Please Enter linkedIn Profile\"\n//                      />\n//                      {errors.linkedInProfile === false && (\n//                        <div className=\"validationerror\">\n//                          Please enter linkedIn Profile\n//                        </div>\n//                      )}\n//                    </div>\n//                  </div>\n//                  <div className=\"col-lg-3\">\n//                    <div className=\"mb-3\">\n//                      <label htmlFor=\"emails\" className=\"form-label\">\n//                        Emails\n//                      </label>\n//                      <input\n//                        type=\"text\"\n//                        value={values.emails}\n//                        name=\"emails\"\n//                        onChange={handleInputChange}\n//                        className={\"form-control\" + applyErrorClass(\"emails\")}\n//                        placeholder=\"Please Enter Email\"\n//                      />\n//                      {errors.emails === false && (\n//                        <div className=\"validationerror\">\n//                          Please enter email\n//                        </div>\n//                      )}\n//                    </div>\n//                  </div>\n//                  <div className=\"col-lg-3\">\n//                    <div className=\"mb-3\">\n//                      <label htmlFor=\"phoneNumbers\" className=\"form-label\">\n//                        Phone Numbers\n//                      </label>\n//                      <input\n//                        type=\"text\"\n//                        value={values.phoneNumbers}\n//                        name=\"phoneNumbers\"\n//                        onChange={handleInputChange}\n//                        className={\n//                          \"form-control\" + applyErrorClass(\"phoneNumbers\")\n//                        }\n//                        placeholder=\"Please Enter Phone Number\"\n//                      />\n//                      {errors.phoneNumbers === false && (\n//                        <div className=\"validationerror\">\n//                          Please enter phone number\n//                        </div>\n//                      )}\n//                    </div>\n//                  </div>\n//                  <div className=\"col-lg-6\">\n//                    <div className=\"mb-3\">\n//                      <label htmlFor=\"comments\" className=\"form-label\">\n//                        Comments\n//                      </label>\n//                      <input\n//                        type=\"text\"\n//                        value={values.comments}\n//                        name=\"comments\"\n//                        onChange={handleInputChange}\n//                        className={\"form-control\" + applyErrorClass(\"commments\")}\n//                        placeholder=\"Please Enter Comments\"\n//                      />\n//                      {errors.comments === false && (\n//                        <div className=\"validationerror\">\n//                          Please enter Comments\n//                        </div>\n//                      )}\n//                    </div>\n//                  </div>\n//                  <div className=\"col-lg-6\">\n//                  <div className=\"mb-3\">\n//  <label htmlFor=\"communicationPeriodicity\" className=\"form-label\">\n//    Communication Periodicity\n//  </label>\n//  <select\n//    value={values.communicationPeriodicity}\n//    name=\"communicationPeriodicity\"\n//    onChange={handleInputChange}\n//    className={\"form-control\" + applyErrorClass(\"communicationPeriodicity\")}\n//  >\n//    <option value=\"\">Please Select Periodicity</option>\n//    <option value=\"1\">Every 1 Week</option>\n//    <option value=\"2\">Every 2 Weeks</option>\n//    <option value=\"3\">Every 3 Weeks</option>\n//    <option value=\"4\">Every 4 Weeks</option>\n//    <option value=\"5\">Every 5 Weeks</option>\n//  </select>\n//  {errors.communicationPeriodicity === false && (\n//    <div className=\"validationerror\">\n//      Please select a periodicity\n//    </div>\n//  )}\n// </div>\n\n//                  </div>\n\n//                  <div className=\"col-lg-3\">\n//                    <div className=\"hstack gap-2 justify-content-end mb-3 mt-4\">\n//                      {btnSubmit === true ? (\n//                        <button type=\"submit\" className=\"btn btn-primary w-100\">\n//                          {values.companyId ===\n//                          \"00000000-0000-0000-0000-000000000000\"\n//                            ? \"Submit\"\n//                            : \"Update\"}\n//                        </button>\n//                      ) : (\n//                        <button\n//                          type=\"submit\"\n//                          className=\"btn btn-primary w-100\"\n//                          disabled\n//                        >\n//                          Please wait...\n//                        </button>\n//                      )}\n//                      <button\n//                        type=\"button\"\n//                        className=\"btn btn-danger w-100\"\n//                        onClick={resetForm}\n//                      >\n//                        Cancel\n//                      </button>\n//                    </div>\n//                  </div>\n//                </div>\n//              </form>\n//            </div>\n//            <div className=\"row\">\n//              <div className=\"col-xl-12\">\n//                <div className=\"card card-height-100\">\n//                  <div className=\"card-header align-items-center d-flex\">\n//                    <h4 className=\"card-title mb-0 flex-grow-1\">Companys</h4>\n//                  </div>\n//                  <div className=\"card-body\">\n//                    <div className=\"table-responsive table-card\">\n//                      <table className=\"table align-middle\">\n//                        <thead className=\"table-light\">\n//                          <tr>\n//                            <th>S.No</th>\n//                            <th>Company Name</th>\n//                            <th>Location</th>\n//                            <th>linkedInProfile</th>\n//                            <th>Emails</th>\n//                            <th>Phone Numbers</th>\n//                            <th>Comments</th>\n//                            <th>Communication Periodicity</th>\n//                            <th>Action</th>\n//                          </tr>\n//                        </thead>\n//                        <tbody>\n//                          {lists.length > 0 &&\n//                            lists.map((v, index) => (\n//                              <tr key={v.companyId}>\n//                                <td>{index + 1}</td>\n//                                <td>{v.companyName}</td>\n//                                <td>{v.location}</td>\n//                                <td>{v.linkedInProfile}</td>\n//                                <td>{v.emails}</td>\n//                                <td>{v.phoneNumbers}</td>\n//                                <td>{v.comments}</td>\n//                                <td>{`Every ${v.communicationPeriodicity} ${v.communicationPeriodicity > 1 ? \"Weeks\" : \"Week\"}`}</td>\n//                                <td>\n//                                  <ul className=\"list-inline hstack gap-2 mb-0\">\n\n//                                    <li>\n//                                      <Link\n//                                        className=\"edit-item-btn\"\n//                                        onClick={() => showEditDetails(v)}\n//                                      >\n//                                        <i className=\"ri-pencil-fill text-muted\" />\n//                                      </Link>\n//                                    </li>\n\n//                                    <li>\n//                                      <Link\n//                                        className=\"remove-item-btn\"\n//                                        onClick={(e) => onDelete(e, v.companyId)}\n//                                      >\n//                                        <i className=\"ri-delete-bin-fill text-muted\" />\n//                                      </Link>\n//                                    </li>\n//                                  </ul>\n//                                </td>\n//                              </tr>\n//                            ))}\n//                        </tbody>\n//                      </table>\n//                    </div>\n//                    <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\n//                      <div className=\"flex-shrink-0\">\n//                        <div className=\"text-muted\">\n//                          Showing{\" \"}\n//                          <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\n//                          <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\n//                          Results\n//                        </div>\n//                      </div>\n//                      <ul className=\"pagination pagination-separated pagination-sm mb-0\">\n//                        <li\n//                          className={\n//                            \"page-item\" + data.previousPage === null\n//                              ? \"disabled\"\n//                              : \"\"\n//                          }\n//                          onClick={() => GetFirstPageData()}\n//                        >\n//                          <Link className=\"page-link\">Previous</Link>\n//                        </li>\n//                        {renderPageNumbers}\n//                        <li\n//                          className={\n//                            \"page-item\" + data.nextPage === null\n//                              ? \"disabled\"\n//                              : \"\"\n//                          }\n//                          onClick={() => GetLastPageData()}\n//                        >\n//                          <Link className=\"page-link\">Next</Link>\n//                        </li>\n//                      </ul>\n//                    </div>\n//                  </div>\n//                </div>\n//              </div>\n//            </div>\n\n//          </div>\n//        </div>\n//      </div>\n//    </div>\n//  );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Md Asif/Desktop/CALENDAR FRONTEND/src/Components/UserModule/Dashboard.js"],"sourcesContent":["\r\n// import { Link } from \"react-router-dom\";\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import config from \"../../Common/Configurations/APIConfig\";\r\n// import { handleSuccess, handleError } from \"../../Common/Layout/CustomAlerts\";\r\n// import LayoutHeader from \"../../Common/Layout/Header\";\r\n// import LayoutSideBar from \"../../Common/Layout/Sidebar\";\r\n\r\n// const initialFieldValues = {\r\n//  companyId: \"00000000-0000-0000-0000-000000000000\",\r\n//  companyName: \"\",\r\n//  location: \"\",\r\n//  linkedInProfile: \"\",\r\n//  emails: \"\",\r\n//  phoneNumbers: \"\",\r\n//  comments: \"\",\r\n//  communicationPeriodicity: \"\"\r\n// };\r\n// export default function Dashboard() {\r\n//  const [lists, setLists] = useState([]);\r\n//  const [values, setValues] = useState(initialFieldValues);\r\n//  const [recordForEdit, setRecordForEdit] = useState(null);\r\n//  const [errors, setErrors] = useState({});\r\n//  const [btnSubmit, setBtnSubmit] = useState(true);\r\n//  const [totalPages, setTotalPages] = useState(0);\r\n//  const [pageSize, setPageSize] = useState(20);\r\n//  const [pageNumber, setPageNumber] = useState(1);\r\n//  const [data, setData] = useState([]);\r\n//  const [totalRecords, setTotalRecords] = useState(0);\r\n//  const [selectedClient, setSelectedClient] = useState(null);\r\n//  const [emailFields, setEmailFields] = useState([\"\"]); // Manage dynamic email inputs\r\n//  const [phoneFields, setPhoneFields] = useState([\"\"]); // Manage dynamic phone inputs\r\n \r\n \r\n//  const headerconfig = {\r\n//    headers: {\r\n//      Authorization: \"Bearer \" + localStorage.getItem(\"userToken\"),\r\n//      \"Content-Type\": \"application/json\", // For JSON requests\r\n//    },\r\n//  };\r\n \r\n//  useEffect(() => {\r\n//    if (recordForEdit !== null) {\r\n//      setValues(recordForEdit);\r\n//    }\r\n//  }, [recordForEdit]);\r\n\r\n//  const handleInputChange = (e) => {\r\n//    const { name, value } = e.target;\r\n//    setValues({\r\n//      ...values,\r\n//      [name]: value,\r\n//    });\r\n//  };\r\n//  const validate = () => {\r\n//    let temp = {};\r\n//    temp.companyName = values.companyName === \"\" ? false : true;\r\n//    temp.location = values.location === \"\" ? false : true;\r\n//    temp.linkedInProfile = values.linkedInProfile === \"\" ? false : true;\r\n//    temp.emails = values.emails === \"\" ? false : true;\r\n//    temp.phoneNumbers = values.phoneNumbers === \"\" ? false : true;\r\n//    temp.comments = values.comments === \"\" ? false : true;\r\n//    temp.communicationPeriodicity = values.communicationPeriodicity === \"\" ? false : true;\r\n//    setErrors(temp);\r\n//    return Object.values(temp).every((x) => x === true);\r\n//  };\r\n\r\n//  const handleSubmit = (e) => {\r\n//    e.preventDefault();\r\n//    if (validate()) {\r\n//      setBtnSubmit(false);\r\n//      const payload = {\r\n//        companyId: values.companyId,\r\n//        companyName: values.companyName,\r\n//        location: values.location, // Corrected typo here\r\n//        linkedInProfile: values.linkedInProfile,\r\n//        emails: values.emails,\r\n//        phoneNumbers: values.phoneNumbers,\r\n//        comments: values.comments,\r\n//        communicationPeriodicity: values.communicationPeriodicity,\r\n//      };\r\n//      addOrEdit(payload);\r\n//    }\r\n//  };\r\n \r\n//  const applicationAPI = () => {\r\n//    return {\r\n//      create: (newrecord) =>\r\n//        axios.post(config.APIACTIVATEURL + config.CREATECOMPANYMANAGEMENT, newrecord, {\r\n//          ...headerconfig,\r\n//        }),\r\n//      update: (updateRecord) =>\r\n//        axios.put(config.APIACTIVATEURL + config.UPDATECOMPANYMANAGEMENT, updateRecord, {\r\n//          ...headerconfig,\r\n//        }),\r\n//    };\r\n//  };\r\n//  const addOrEdit = (payload) => {\r\n//    if (payload.companyId === \"00000000-0000-0000-0000-000000000000\") {\r\n//      applicationAPI()\r\n//        .create(payload)  // Send as JSON, not FormData\r\n//        .then((res) => {\r\n//          if (res.data.statusCode === 200) {\r\n//            handleSuccess(\"Record Created\");\r\n//            resetForm();\r\n//            GetData(pageNumber);\r\n//            setBtnSubmit(true);\r\n//          } else {\r\n//            handleError(res.data.message);\r\n//            setBtnSubmit(true);\r\n//          }\r\n//        })\r\n//        .catch(function (error) {\r\n//          handleError(\"Error in saving data\");\r\n//          setBtnSubmit(true);\r\n//        });\r\n//    } else {\r\n//      applicationAPI()\r\n//        .update(payload)  // Send as JSON, not FormData\r\n//        .then((res) => {\r\n//          if (res.data.statusCode === 200) {\r\n//            handleSuccess(\"Record Updated\");\r\n//            resetForm();\r\n//            GetData(pageNumber);\r\n//            setBtnSubmit(true);\r\n//          } else {\r\n//            handleError(res.data.message);\r\n//            setBtnSubmit(true);\r\n//          }\r\n//        })\r\n//        .catch(function (error) {\r\n//          handleError(\"Error in updating data\");\r\n//          setBtnSubmit(true);\r\n//        });\r\n//    }\r\n//  };\r\n \r\n//  const resetForm = () => {\r\n//    setValues(initialFieldValues);\r\n//    setErrors({});\r\n//  };\r\n//  const showEditDetails = (data) => {\r\n//    setRecordForEdit(data);\r\n//  };\r\n//  const GetLastPageData = () => {\r\n//    GetData(totalPages);\r\n//  };\r\n//  const GetFirstPageData = () => {\r\n//    GetData(\"1\");\r\n//  };\r\n//  const GetPageData = (number) => {\r\n//    setPageNumber(number);\r\n//    if (pageNumber !== number) GetData(number);\r\n//  };\r\n//  const pageNumbers = [];\r\n//  for (let i = 1; i <= totalPages; i++) {\r\n//    pageNumbers.push(i);\r\n//  }\r\n//  const renderPageNumbers = pageNumbers.map((number) => {\r\n//    return (\r\n//      <li\r\n//        className=\"page-item\"\r\n//        key={number}\r\n//        id={number}\r\n//        onClick={() => GetPageData(number)}\r\n//      >\r\n//        <Link className=\"page-link\">{number}</Link>\r\n//      </li>\r\n//    );\r\n//  });\r\n \r\n//  const onDelete = (e, id) => {\r\n//    if (window.confirm(\"Are you sure to delete this record?\")) {\r\n//      axios\r\n//        .delete(config.APIACTIVATEURL + config.DELETECOMPANYMANAGEMENT + \"/\" + id, {\r\n//          ...headerconfig,\r\n//        })\r\n//        .then((response) => {\r\n//          if (response.data.statusCode === 200) {\r\n//            handleSuccess(response.data.data);\r\n//            GetData(pageNumber);\r\n//            resetForm();\r\n//          } else {\r\n//            handleError(response.data.data);\r\n//            GetData(pageNumber);\r\n//            resetForm();\r\n//          }\r\n//        });\r\n//    }\r\n//  };\r\n//  const GetData = (number) => {\r\n//    axios\r\n//      .get(\r\n//        config.APIACTIVATEURL +\r\n//          config.GETALLCOMPANYMANAGEMENT +\r\n//          \"?pageNumber=\" +\r\n//          number +\r\n//          \"&pageSize=\" +\r\n//          pageSize,\r\n//        { ...headerconfig }\r\n//      )\r\n//      .then((response) => {\r\n//        setLists(response.data.data);\r\n//        setPageNumber(response.data.data.pageNumber);\r\n//        setPageSize(response.data.data.pageSize);\r\n//        setTotalPages(response.data.data.totalPages);\r\n//        setData(response.data.data);\r\n//        setTotalRecords(response.data.data.totalRecords);\r\n//      });\r\n//  };\r\n//  const applyErrorClass = (field) =>\r\n//    field in errors && errors[field] === false ? \" form-control-danger\" : \"\";\r\n//  useEffect(() => {\r\n//    GetData(pageNumber);\r\n//  }, []);\r\n//  return (\r\n//    <div id=\"layout-wrapper\">\r\n//      <LayoutHeader />\r\n//      <LayoutSideBar />\r\n//      <div className=\"main-content\">\r\n//        <div className=\"page-content\">\r\n//          <div className=\"container-fluid\">\r\n//            <div className=\"row\">\r\n//              <div className=\"col-12\">\r\n//                <div className=\"page-title-box d-sm-flex align-items-center justify-content-between\">\r\n//                  <h4 className=\"mb-sm-0\">Company Managements</h4>\r\n//                </div>\r\n//              </div>\r\n//            </div>\r\n//            <div className=\"alert alert-success\">\r\n//              <form onSubmit={handleSubmit} autoComplete=\"off\" noValidate>\r\n//                <div className=\"row\">\r\n//                  <div className=\"col-lg-3\">\r\n//                    <div className=\"mb-3\">\r\n//                      <label htmlFor=\"companyName\" className=\"form-label\">\r\n//                        Company Name \r\n//                      </label>\r\n//                      <input\r\n//                        type=\"text\"\r\n//                        value={values.companyName}\r\n//                        name=\"companyName\"\r\n//                        onChange={handleInputChange}\r\n//                        className={\r\n//                          \"form-control\" + applyErrorClass(\"companyName\")\r\n//                        }\r\n//                        placeholder=\"Please Enter Company Name \"\r\n//                      />\r\n//                      {errors.companyName === false && (\r\n//                        <div className=\"validationerror\">\r\n//                          Please enter company name\r\n//                        </div>\r\n//                      )}\r\n//                    </div>\r\n//                  </div>\r\n//                  <div className=\"col-lg-3\">\r\n//                    <div className=\"mb-3\">\r\n//                      <label htmlFor=\"location\" className=\"form-label\">\r\n//                        Location\r\n//                      </label>\r\n//                      <input\r\n//                        type=\"text\"\r\n//                        value={values.location}\r\n//                        name=\"location\"\r\n//                        onChange={handleInputChange}\r\n//                        className={\r\n//                          \"form-control\" + applyErrorClass(\"location\")\r\n//                        }\r\n//                        placeholder=\"Please Enter Location\"\r\n//                      />\r\n//                      {errors.location === false && (\r\n//                        <div className=\"validationerror\">\r\n//                          Please enter location\r\n//                        </div>\r\n//                      )}\r\n//                    </div>\r\n//                  </div>\r\n//                  <div className=\"col-lg-3\">\r\n//                    <div className=\"mb-3\">\r\n//                      <label htmlFor=\"linkedInProfile\" className=\"form-label\">\r\n//                        LinkedIn Profile\r\n//                      </label>\r\n//                      <input\r\n//                        type=\"text\"\r\n//                        value={values.linkedInProfile}\r\n//                        name=\"linkedInProfile\"\r\n//                        onChange={handleInputChange}\r\n//                        className={\r\n//                          \"form-control\" + applyErrorClass(\"linkedInProfile\")\r\n//                        }\r\n//                        placeholder=\"Please Enter linkedIn Profile\"\r\n//                      />\r\n//                      {errors.linkedInProfile === false && (\r\n//                        <div className=\"validationerror\">\r\n//                          Please enter linkedIn Profile\r\n//                        </div>\r\n//                      )}\r\n//                    </div>\r\n//                  </div>\r\n//                  <div className=\"col-lg-3\">\r\n//                    <div className=\"mb-3\">\r\n//                      <label htmlFor=\"emails\" className=\"form-label\">\r\n//                        Emails\r\n//                      </label>\r\n//                      <input\r\n//                        type=\"text\"\r\n//                        value={values.emails}\r\n//                        name=\"emails\"\r\n//                        onChange={handleInputChange}\r\n//                        className={\"form-control\" + applyErrorClass(\"emails\")}\r\n//                        placeholder=\"Please Enter Email\"\r\n//                      />\r\n//                      {errors.emails === false && (\r\n//                        <div className=\"validationerror\">\r\n//                          Please enter email\r\n//                        </div>\r\n//                      )}\r\n//                    </div>\r\n//                  </div>\r\n//                  <div className=\"col-lg-3\">\r\n//                    <div className=\"mb-3\">\r\n//                      <label htmlFor=\"phoneNumbers\" className=\"form-label\">\r\n//                        Phone Numbers\r\n//                      </label>\r\n//                      <input\r\n//                        type=\"text\"\r\n//                        value={values.phoneNumbers}\r\n//                        name=\"phoneNumbers\"\r\n//                        onChange={handleInputChange}\r\n//                        className={\r\n//                          \"form-control\" + applyErrorClass(\"phoneNumbers\")\r\n//                        }\r\n//                        placeholder=\"Please Enter Phone Number\"\r\n//                      />\r\n//                      {errors.phoneNumbers === false && (\r\n//                        <div className=\"validationerror\">\r\n//                          Please enter phone number\r\n//                        </div>\r\n//                      )}\r\n//                    </div>\r\n//                  </div>\r\n//                  <div className=\"col-lg-6\">\r\n//                    <div className=\"mb-3\">\r\n//                      <label htmlFor=\"comments\" className=\"form-label\">\r\n//                        Comments\r\n//                      </label>\r\n//                      <input\r\n//                        type=\"text\"\r\n//                        value={values.comments}\r\n//                        name=\"comments\"\r\n//                        onChange={handleInputChange}\r\n//                        className={\"form-control\" + applyErrorClass(\"commments\")}\r\n//                        placeholder=\"Please Enter Comments\"\r\n//                      />\r\n//                      {errors.comments === false && (\r\n//                        <div className=\"validationerror\">\r\n//                          Please enter Comments\r\n//                        </div>\r\n//                      )}\r\n//                    </div>\r\n//                  </div>\r\n//                  <div className=\"col-lg-6\">\r\n//                  <div className=\"mb-3\">\r\n//  <label htmlFor=\"communicationPeriodicity\" className=\"form-label\">\r\n//    Communication Periodicity\r\n//  </label>\r\n//  <select\r\n//    value={values.communicationPeriodicity}\r\n//    name=\"communicationPeriodicity\"\r\n//    onChange={handleInputChange}\r\n//    className={\"form-control\" + applyErrorClass(\"communicationPeriodicity\")}\r\n//  >\r\n//    <option value=\"\">Please Select Periodicity</option>\r\n//    <option value=\"1\">Every 1 Week</option>\r\n//    <option value=\"2\">Every 2 Weeks</option>\r\n//    <option value=\"3\">Every 3 Weeks</option>\r\n//    <option value=\"4\">Every 4 Weeks</option>\r\n//    <option value=\"5\">Every 5 Weeks</option>\r\n//  </select>\r\n//  {errors.communicationPeriodicity === false && (\r\n//    <div className=\"validationerror\">\r\n//      Please select a periodicity\r\n//    </div>\r\n//  )}\r\n// </div>\r\n\r\n//                  </div>\r\n                 \r\n//                  <div className=\"col-lg-3\">\r\n//                    <div className=\"hstack gap-2 justify-content-end mb-3 mt-4\">\r\n//                      {btnSubmit === true ? (\r\n//                        <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n//                          {values.companyId ===\r\n//                          \"00000000-0000-0000-0000-000000000000\"\r\n//                            ? \"Submit\"\r\n//                            : \"Update\"}\r\n//                        </button>\r\n//                      ) : (\r\n//                        <button\r\n//                          type=\"submit\"\r\n//                          className=\"btn btn-primary w-100\"\r\n//                          disabled\r\n//                        >\r\n//                          Please wait...\r\n//                        </button>\r\n//                      )}\r\n//                      <button\r\n//                        type=\"button\"\r\n//                        className=\"btn btn-danger w-100\"\r\n//                        onClick={resetForm}\r\n//                      >\r\n//                        Cancel\r\n//                      </button>\r\n//                    </div>\r\n//                  </div>\r\n//                </div>\r\n//              </form>\r\n//            </div>\r\n//            <div className=\"row\">\r\n//              <div className=\"col-xl-12\">\r\n//                <div className=\"card card-height-100\">\r\n//                  <div className=\"card-header align-items-center d-flex\">\r\n//                    <h4 className=\"card-title mb-0 flex-grow-1\">Companys</h4>\r\n//                  </div>\r\n//                  <div className=\"card-body\">\r\n//                    <div className=\"table-responsive table-card\">\r\n//                      <table className=\"table align-middle\">\r\n//                        <thead className=\"table-light\">\r\n//                          <tr>\r\n//                            <th>S.No</th>\r\n//                            <th>Company Name</th>\r\n//                            <th>Location</th>\r\n//                            <th>linkedInProfile</th>\r\n//                            <th>Emails</th>\r\n//                            <th>Phone Numbers</th>\r\n//                            <th>Comments</th>\r\n//                            <th>Communication Periodicity</th>\r\n//                            <th>Action</th>\r\n//                          </tr>\r\n//                        </thead>\r\n//                        <tbody>\r\n//                          {lists.length > 0 &&\r\n//                            lists.map((v, index) => (\r\n//                              <tr key={v.companyId}>\r\n//                                <td>{index + 1}</td>\r\n//                                <td>{v.companyName}</td>\r\n//                                <td>{v.location}</td>\r\n//                                <td>{v.linkedInProfile}</td>\r\n//                                <td>{v.emails}</td>\r\n//                                <td>{v.phoneNumbers}</td>\r\n//                                <td>{v.comments}</td>\r\n//                                <td>{`Every ${v.communicationPeriodicity} ${v.communicationPeriodicity > 1 ? \"Weeks\" : \"Week\"}`}</td>\r\n//                                <td>\r\n//                                  <ul className=\"list-inline hstack gap-2 mb-0\">\r\n\r\n//                                    <li>\r\n//                                      <Link\r\n//                                        className=\"edit-item-btn\"\r\n//                                        onClick={() => showEditDetails(v)}\r\n//                                      >\r\n//                                        <i className=\"ri-pencil-fill text-muted\" />\r\n//                                      </Link>\r\n//                                    </li>\r\n\r\n//                                    <li>\r\n//                                      <Link\r\n//                                        className=\"remove-item-btn\"\r\n//                                        onClick={(e) => onDelete(e, v.companyId)}\r\n//                                      >\r\n//                                        <i className=\"ri-delete-bin-fill text-muted\" />\r\n//                                      </Link>\r\n//                                    </li>\r\n//                                  </ul>\r\n//                                </td>\r\n//                              </tr>\r\n//                            ))}\r\n//                        </tbody>\r\n//                      </table>\r\n//                    </div>\r\n//                    <div className=\"align-items-center mt-4 pt-2 justify-content-between d-flex\">\r\n//                      <div className=\"flex-shrink-0\">\r\n//                        <div className=\"text-muted\">\r\n//                          Showing{\" \"}\r\n//                          <span className=\"fw-semibold\">{lists.length}</span> of{\" \"}\r\n//                          <span className=\"fw-semibold\">{totalRecords}</span>{\" \"}\r\n//                          Results\r\n//                        </div>\r\n//                      </div>\r\n//                      <ul className=\"pagination pagination-separated pagination-sm mb-0\">\r\n//                        <li\r\n//                          className={\r\n//                            \"page-item\" + data.previousPage === null\r\n//                              ? \"disabled\"\r\n//                              : \"\"\r\n//                          }\r\n//                          onClick={() => GetFirstPageData()}\r\n//                        >\r\n//                          <Link className=\"page-link\">Previous</Link>\r\n//                        </li>\r\n//                        {renderPageNumbers}\r\n//                        <li\r\n//                          className={\r\n//                            \"page-item\" + data.nextPage === null\r\n//                              ? \"disabled\"\r\n//                              : \"\"\r\n//                          }\r\n//                          onClick={() => GetLastPageData()}\r\n//                        >\r\n//                          <Link className=\"page-link\">Next</Link>\r\n//                        </li>\r\n//                      </ul>\r\n//                    </div>\r\n//                  </div>\r\n//                </div>\r\n//              </div>\r\n//            </div>\r\n           \r\n//          </div>\r\n//        </div>\r\n//      </div>\r\n//    </div>\r\n//  );\r\n// }"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}